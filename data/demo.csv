id,question,answer
0,"What is lsp-medialive-enricher
?","
Enriches CloudWatch Events from AWS MediaLive and publishes to the MediaLive Encoding Output Topic, to be consumed by [lsp-influx-poster](https://github.com/bbc/lsp-influx-poster) and [lsp-event-statusmapper](https://github.com/bbc/lsp-events-statusmapper).

"
1,"lsp-medialive-enricher's ""Development
""","
The Makefile defines all the processes needed to build and test the project.

"
2,"lsp-medialive-enricher's ""Make a clean build of the java application
""","```
make jar
```

"
3,"lsp-medialive-enricher's ""Run the tests
""","```
make test
```

"
4,"lsp-medialive-enricher's ""Combination of the above two commands - building first and testing next
""","```
make clean_test
```
"
5,"lsp-medialive-enricher's ""Cucumber tags can be provided in the environment variable TAGS to run specific scenarios:
""","```
TAGS=""@happy"" make test or TAGS=""@happy"" ./test
```

NOTE: By default, the tests run using the same arguments as Okta. This means the 
order is random and any scenarios tagged with '@wip' are skipped.

"
6,"lsp-medialive-enricher's ""Docker Component tests
""","
The component tests use Docker to build a mock environment representative of the cloud 
network the lambda is executed inside of.

The component tests now do not require the internet to run and only require the internet 
to pull images and dependencies to build/run the mocks. This should further reduce the 
'runs on my machine' and random networking based failures in our tests.

"
7,"lsp-medialive-enricher's ""Docker-compose.yml
""","
Defines all of the services for our cucumber tests and mock environment. Including the
network setup to allow aws bound calls to be routed internally within the Docker Network.

"
8,"lsp-medialive-enricher's ""Reverse-proxy
""","
This handles the ssl termination for the https requests the lambda code will try to 
make to the mock aws services. Most of these have no or limited ssl support so the
reverse proxy can handle this and use plain http to the services. 

A key advantage of this and the combination of docker allows us to use the 'true' DNS 
name of the aws endpoint and route it to a Docker container by using the aliases feature
of docker networking. This allows us to make no changes to the endpoints the services use 
to communicate out of the lambda.

"
9,"lsp-medialive-enricher's ""Cucumber
""","
The cucumber tests are built into a docker image and run inside the same network as the aws
services. This allows the standard ruby libraries to interact with AWS to continue working 
without any alteration.

It also prevents the need to do any port mapping on the Docker host. This would have caused 
issues on Build servers if two tests try to map the same port.

"
10,"lsp-medialive-enricher's ""Deploying Stacks
""","
Needs to be in this order:
- Resources
- Ispy
- Component
"
11,lsp-medialive-enricher Enricher receives a switchInputLogEvent and sends DEEL messages to topics?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
Given MediaLive API Gateway PUT /channels endpoint exists and will respond with
When a switchInputLogEvent ""non-slate input"" message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.input-switch.received"" is emitted with the received attributes
Then a GET request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.livestream.input-switch.cvid.retrieved"" is emitted with the received attributes
And a DEEL message is sent to the ""OUT"" topic with
And a DEEL message is sent to the ""MEDIALIVE_IN"" topic with
And an ispy event ""lsp-medialive-enricher.livestream.input-switch.notification.complete"" is emitted with the received attributes
And a PUT request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.livestream.input-switch.active-input.updated"" is emitted with the received attributes

"
12,lsp-medialive-enricher Enricher receives a switchInputLogEvent for slate input and sends DEEL messages to topics?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
Given MediaLive API Gateway PUT /channels endpoint exists and will respond with
When a switchInputLogEvent ""slate"" message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.input-switch.received"" is emitted with the received attributes
Then a GET request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.livestream.input-switch.cvid.retrieved"" is emitted with the received attributes
And a DEEL message is sent to the ""OUT"" topic with
And a DEEL message is sent to the ""MEDIALIVE_IN"" topic with
And an ispy event ""lsp-medialive-enricher.livestream.input-switch.notification.complete"" is emitted with the received attributes
And a PUT request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.livestream.input-switch.active-input.updated"" is emitted with the received attributes

"
13,lsp-medialive-enricher Enricher receives a 4xx error when attempting to retrieve Channel record from State Api?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
When a switchInputLogEvent ""non-slate input"" message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.input-switch.received"" is emitted
Then a GET request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.channel-retrieve-failed"" is emitted
And a DEEL message is sent to the ""OUT"" topic with
And an ispy event ""lsp-medialive-enricher.channel-retrieve-failed.notification"" is emitted
Then the message is sent to the fail queue

"
14,lsp-medialive-enricher Enricher receives a 5xx error when attempting to retrieve Channel record from State Api?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
When a switchInputLogEvent ""non-slate input"" message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.input-switch.received"" is emitted
Then a GET request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.channel-retrieve-failed"" is emitted
And a DEEL message is sent to the ""OUT"" topic with
And an ispy event ""lsp-medialive-enricher.channel-retrieve-failed.notification"" is emitted

"
15,lsp-medialive-enricher Enricher finds nothing when attempting to retrieve Channel record from State Api?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
When a switchInputLogEvent ""non-slate input"" message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.input-switch.received"" is emitted
Then a GET request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.channel-record-notfound"" is emitted
And a DEEL message is sent to the ""OUT"" topic with
And an ispy event ""lsp-medialive-enricher.channel-record-notfound.notification"" is emitted
Then the message is sent to the fail queue

"
16,lsp-medialive-enricher Enricher receives an error from State Api when performing PUT /channels operation?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
Given MediaLive API Gateway PUT /channels endpoint exists and will respond with
When a switchInputLogEvent ""non-slate input"" message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.input-switch.received"" is emitted with the received attributes
Then a GET request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.livestream.input-switch.cvid.retrieved"" is emitted with the received attributes
And a DEEL message is sent to the ""OUT"" topic with
And a DEEL message is sent to the ""MEDIALIVE_IN"" topic with
And an ispy event ""lsp-medialive-enricher.livestream.input-switch.notification.complete"" is emitted with the received attributes
And a PUT request is sent to the API Gateway /channels endpoint
And a DEEL message is sent to the ""OUT"" topic with
And an ispy event ""lsp-medialive-enricher.channel-update-failed.notification"" is emitted
Then the message is sent to the fail queue

"
17,lsp-medialive-enricher Enricher receives an error from State Api when performing PUT /channels operation?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
Given MediaLive API Gateway PUT /channels endpoint exists and will respond with
When a switchInputLogEvent ""non-slate input"" message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.input-switch.received"" is emitted with the received attributes
Then a GET request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.livestream.input-switch.cvid.retrieved"" is emitted with the received attributes
And a DEEL message is sent to the ""OUT"" topic with
And a DEEL message is sent to the ""MEDIALIVE_IN"" topic with
And an ispy event ""lsp-medialive-enricher.livestream.input-switch.notification.complete"" is emitted with the received attributes
And a PUT request is sent to the API Gateway /channels endpoint
And a DEEL message is sent to the ""OUT"" topic with
And an ispy event ""lsp-medialive-enricher.channel-update-failed.notification"" is emitted
"
18,lsp-medialive-enricher Enricher receives a final timecode message and sends a message to the output topic?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
When a final-timecode message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.final-timecode.received"" is emitted with the received attributes
Then a GET request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.livestream.final-timecode.cvid.retrieved"" is emitted with the received attributes
And a DEEL message is sent to the ""OUT"" topic with
And an ispy event ""lsp-medialive-enricher.livestream.final-timecode.notification.complete"" is emitted with the received attributes


"
19,lsp-medialive-enricher Enricher receives a 4xx error when attempting to retrieve Channel record from State Api?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
When a final-timecode message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.final-timecode.received"" is emitted
Then a GET request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.channel-retrieve-failed"" is emitted
And a DEEL message is sent to the ""OUT"" topic with
And an ispy event ""lsp-medialive-enricher.channel-retrieve-failed.notification"" is emitted
Then the message is sent to the fail queue

"
20,lsp-medialive-enricher Enricher receives a 5xx error when attempting to retrieve Channel record from State Api?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
When a final-timecode message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.final-timecode.received"" is emitted
Then a GET request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.channel-retrieve-failed"" is emitted
And a DEEL message is sent to the ""OUT"" topic with
And an ispy event ""lsp-medialive-enricher.channel-retrieve-failed.notification"" is emitted

"
21,lsp-medialive-enricher Enricher finds nothing when attempting to retrieve Channel record from State Api?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
When a final-timecode message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.final-timecode.received"" is emitted
Then a GET request is sent to the API Gateway /channels endpoint
And an ispy event ""lsp-medialive-enricher.channel-record-notfound"" is emitted
And a DEEL message is sent to the ""OUT"" topic with
And an ispy event ""lsp-medialive-enricher.channel-record-notfound.notification"" is emitted
Then the message is sent to the fail queue
"
22,lsp-medialive-enricher Enricher receives a initialTimecodeEvent?,"Given MediaLive API Gateway PUT /channels endpoint exists and will respond with
When a initial-timecode message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.initial-timecode.received"" is emitted with the received attributes
And a PUT request is sent to the API Gateway /channels endpoint to update the active input
And an ispy event ""lsp-medialive-enricher.livestream.initial-timecode.active-input.updated"" is emitted with the received attributes

"
23,lsp-medialive-enricher Enricher receives a initialTimecodeEvent?,"Given MediaLive API Gateway PUT /channels endpoint exists and will respond with
When a initial-timecode message arrives on the queue
Then an ispy event ""lsp-medialive-enricher.livestream.initial-timecode.received"" is emitted with the received attributes
And a DEEL message is sent to the ""OUT"" topic with
And an ispy event ""lsp-medialive-enricher.channel-update-failed.notification"" is emitted

"
24,lsp-medialive-enricher Enricher receives an event with an unknown state and sends it to the badmessage queue?,"Given MediaLive API Gateway GET /channels endpoint exists and will respond with
When a message with an unknown state is sent to the queue
Then an ispy event ""lsp-medialive-enricher.badmessage"" is emitted
And the message is sent to the badmessage queue
"
25,lsp-medialive-alerter Get Channel by channel Arn returns a 4xx exception?,"Given MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""400"" with
When a medialive channel alert message is sent to the queue
Then an ispy event ""channel-alert.received"" is emitted with
And an ispy event ""channel-retrieve-failed"" is emitted
And the message is sent to the fail queue


"
26,lsp-medialive-alerter Get Channel by channel Arn returns a 5xx exception?,"Given MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""500"" with
When a medialive channel alert message is sent to the queue
Then an ispy event ""channel-alert.received"" is emitted with
And an ispy event ""channel-retrieve-failed"" is emitted
And the message is sent to the fail queue


"
27,lsp-medialive-alerter Get Channel by channel Arn returns empty?,"Given MediaLive State API ""/channels"" ""GET"" endpoint returns empty HTTP ""200""
When a medialive channel alert message is sent to the queue
Then an ispy event ""channel-alert.received"" is emitted with
And an ispy event ""channel-record-notfound"" is emitted
And the message is sent to the fail queue


"
28,lsp-medialive-alerter State api returns 400 on POST /channelalerts?,"Given MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""POST"" endpoint returns HTTP ""400"" with
When a medialive channel alert message is sent to the queue
Then an ispy event ""channel-alert-persist-failed"" is emitted
And the message is sent to the fail queue

"
29,lsp-medialive-alerter State api returns 400 on DELETE /channelalerts?,"Given MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""400"" with
When a medialive channel alert message is sent to the queue with AlarmState == cleared
Then an ispy event ""channel-alert-db-delete-failed"" is emitted
And the message is sent to the fail queue


"
30,lsp-medialive-alerter State api returns 400 on GET /channelalerts?,"Given MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""400"" with
And MediaLive State API ""/channelalerts"" ""POST"" endpoint returns HTTP ""200"" with
When a medialive channel alert message is sent to the queue
Then an ispy event ""channel-alert-retrieve-failed"" is emitted
And the message is sent to the fail queue

"
31,lsp-medialive-alerter State api returns 4xx on /channels PUT?,"And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
Given MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
Given MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns empty HTTP ""400""
When a medialive channel alert message is sent to the queue with AlarmState == cleared
And an ispy event ""channel-update-failed"" is emitted
And the message is sent to the fail queue

"
32,lsp-medialive-alerter State api returns 4xx on /channels PUT?,"Given MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""POST"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""400"" with
When a medialive channel alert message is sent to the queue
Then an ispy event ""no-active-alerts-retrieved"" is emitted
And an ispy event ""channel-update-failed"" is emitted
And the message is sent to the fail queue

"
33,lsp-medialive-alerter alerter updates channelRecord state to ALERTING from RUNNING?,"Given MediaLive State API ""/channelalerts"" ""POST"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
Given MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When a medialive channel alert message is sent to the queue with AlarmState == set
Then an ispy event ""active-alerts-retrieved"" is emitted
And an ispy event ""channel.state.updated"" is emitted with
And the correct state api requests are made

"
34,lsp-medialive-alerter alerter does not update channelRecord state when current state is not RUNNING?,"Given MediaLive State API ""/channelalerts"" ""POST"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
Given MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
When a medialive channel alert message is sent to the queue with AlarmState == set
Then an ispy event ""active-alerts-retrieved"" is emitted
Then an ispy event ""channel.state.unmodified"" is emitted
And the correct state api requests are made

"
35,lsp-medialive-alerter alerter updates channelRecord state to RUNNING from ALERTING?,"Given MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
Given MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When a medialive channel alert message is sent to the queue with AlarmState == cleared
Then an ispy event ""no-active-alerts-retrieved"" is emitted
And an ispy event ""channel.state.updated"" is emitted with
And the correct state api requests are made

"
36,lsp-medialive-alerter alerter does not update channelRecord state when current state is not ALARMING?,"Given MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
Given MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
When a medialive channel alert message is sent to the queue with AlarmState == cleared
Then an ispy event ""no-active-alerts-retrieved"" is emitted
Then an ispy event ""channel.state.unmodified"" is emitted
And the correct state api requests are made
"
37,lsp-medialive-alerter Sends cleared alert to encoding and influx topic?,"Given MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
When a medialive channel alert message is sent to the queue with AlarmState == cleared
Then an ispy event ""channel-alert.received"" is emitted with
And an ispy event ""cvid.retrieved"" is emitted with
And an ispy event ""livestream-record-notfound"" is emitted
And an ispy event ""severity.found"" is emitted
And alert is sent to encoding topic with
And an ispy event ""channel-alert.user.notification"" is emitted with
And alert is sent to influx topic with
And an ispy event ""channel-alert.monitoring.notification"" is emitted
And an ispy event ""channel-alert.processed"" is emitted

"
38,lsp-medialive-alerter Default severity when unexpected alert type?,"Given MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""POST"" endpoint returns HTTP ""200"" with
When a medialive channel alert of ""Unexpected Alert Type"" message is sent to the queue
Then an ispy event ""channel-alert.received"" is emitted
And an ispy event ""severity.defaulted"" is emitted with
And alert is sent to encoding topic
And an ispy event ""channel-alert.user.notification"" is emitted
And alert is sent to influx topic
And an ispy event ""channel-alert.monitoring.notification"" is emitted
And an ispy event ""channel-alert.processed"" is emitted


"
39,lsp-medialive-alerter alerter creates channel alert message on AlarmState == set?,"Given MediaLive State API ""/channelalerts"" ""POST"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
When a medialive channel alert message is sent to the queue
Then an ispy event ""channel-alert.persisted"" is emitted

"
40,lsp-medialive-alerter alerter creates channel alert message on AlarmState == cleared?,"Given MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
When a medialive channel alert message is sent to the queue with AlarmState == cleared
Then an ispy event ""channel-alert.db-deleted"" is emitted


"
41,lsp-medialive-alerter Badmessage?,"When a malformed message is sent to the queue
Then an ispy event ""badmessage"" is emitted
And the message is sent to the badmessage queue
"
42,"What is lsp-medialive-alerter
?","
lsp-medialive-alerter consumes Cloudwatch events of type ""Medialive Channel Alert"". It updates the Alert table and 
notifies customers of any errors.

"
43,"lsp-medialive-alerter's ""Development
""","
The Makefile defines all the processes needed to build and test the project.

"
44,"lsp-medialive-alerter's ""Make a clean build of the java application
""","```
make jar
```

"
45,"lsp-medialive-alerter's ""Run the tests
""","
```
make test
```

"
46,"lsp-medialive-alerter's ""Combination of the above two commands building - first and testing next
""","
```
make clean_test
```

"
47,"lsp-medialive-alerter's ""Cucumber tags can be provided in the environment variable TAGS to run specific scenarios:
""","
`TAGS=""@happy"" make test`
or 
`TAGS=""@happy"" ./test`

NOTE: By default, the tests run using the same arguments as Okta. This means the 
order is random and any scenarios tagged with '@wip' are skipped.

"
48,"lsp-medialive-alerter's ""Docker Component tests
""","
The component tests use Docker to build a mock environment representative of the cloud 
network the lambda is executed inside of.

The component tests now do not require the internet to run and only require the internet 
to pull images and dependencies to build/run the mocks. This should further reduce the 
'runs on my machine' and random networking based failures in our tests.

"
49,"lsp-medialive-alerter's ""Docker-compose.yml
""","
Defines all of the services for our cucumber tests and mock environment. Including the
network setup to allow aws bound calls to be routed internally within the Docker Network.

"
50,"lsp-medialive-alerter's ""Reverse-proxy
""","
This handles the ssl termination for the https requests the lambda code will try to 
make to the mock aws services. Most of these have no or limited ssl support so the
reverse proxy can handle this and use plain http to the services. 

A key advantage of this and the combination of docker allows us to use the 'true' DNS 
name of the aws endpoint and route it to a Docker container by using the aliases feature
of docker networking. This allows us to make no changes to the endpoints the services use 
to communicate out of the lambda.

"
51,"lsp-medialive-alerter's ""Cucumber
""","
The cucumber tests are built into a docker image and run inside the same network as the aws
services. This allows the standard ruby libraries to interact with AWS to continue working 
without any alteration.

It also prevents the need to do any port mapping on the Docker host. This would have caused 
issues on Build servers if two tests try to map the same port.

"
52,"lsp-medialive-alerter's ""Deploying Stacks
""","
Needs to be in this order:
- Resources
- Ispy
- Component
"
53,"What is lsp-medialive-conductor
?","
Receives commands and events, turning these into actions it performs on MediaLive.

All channel requests sent to MediaLive contain the destination of the output, which are either routed to Push Packager for distribution to various CDNs
or Duet for social streaming.

"
54,"lsp-medialive-conductor's ""Origin of Incoming Messages
""","
Where do incoming messages come from that make all this happen?

Conductor receives DEEL statement messages from the following origins:

| Deel Message Statement  | Origin                  | Type    |
| ----------------------- | ----------------------- | ------- |
| createInput             | spitfire                | COMMAND |
| createLivestream        | spitfire                | COMMAND |
| startLivestream         | spitfire                | COMMAND |
| stopLivestream          | spitfire                | COMMAND |
| switchInput             | spitfire                | COMMAND |
| amendOverlay            | spitfire                | COMMAND |
| livestreamCreated       | lsp-medialive-enricher  | STATUS  |
| livestreamDeleted       | lsp-medialive-enricher  | STATUS  |
| livestreamStopped       | lsp-medialive-enricher  | STATUS  |

All commands sent by Spitfire are submitted via marvin2-console.

See also: [lsp-medialive-enricher](https://github.com/bbc/lsp-medialive/tree/master/components/lsp-medialive-enricher), 
[spitfire](https://github.com/bbc/spitfire/), 
[marvin2-console](https://github.com/bbc/marvin2-console),
[duet](https://github.com/bbc/duet).

"
55,"lsp-medialive-conductor's ""Profiles
""","
Profiles are loaded from S3 using the `PROFILE_CONFIG_BASE_PREFIX` and `*_PROFILE` environment
variables. Before, the 4KB environment variable limit was exceeded concatenating both the base path and
the profile name for all six profiles.

"
56,"lsp-medialive-conductor's ""Development
""","
The Makefile defines all the processes needed to build and test the project.

"
57,"lsp-medialive-conductor's ""Make a clean build of the java application
""","```
make jar
```

"
58,"lsp-medialive-conductor's ""Run the tests
""","```
make test 
```

"
59,"lsp-medialive-conductor's ""Combination of the above two commands - building first and testing next
""","```
make clean_test
```

"
60,"lsp-medialive-conductor's ""Cucumber tags can be provided in the environment variable TAGS to run specific scenarios:
""","```
TAGS=""@happy"" make test or TAGS=""@happy"" ./test
```

NOTE: By default, the tests run using the same arguments as Okta. This means the
order is random and any scenarios tagged with `@wip` are skipped.

"
61,"lsp-medialive-conductor's ""Testing
""","
"
62,"lsp-medialive-conductor's ""INT
""","
Use the Rundeck jobs for Media Live in Prepare and Transcode on TEST environment. See [Fixtures](https://github.com/bbc/lsp-medialive/tree/master/components/lsp-medialive-conductor/component-test/cucumber/fixtures).

Alternatively, place a message on the EncodingInputTopic.

"
63,"lsp-medialive-conductor's ""Docker Component tests
""","
The component tests use Docker to build a mock environment representative of the cloud
network the lambda is executed inside of.

The component tests now do not require the internet to run and only require the internet
to pull images and dependencies to build/run the mocks. This should further reduce the
'runs on my machine' and random networking based failures in our tests.

When running component tests, profiles are uploaded locally to a mocked just-config s3 bucket
in `env.rb`.

"
64,"lsp-medialive-conductor's ""Docker-compose.yml
""","
Defines all of the services for our cucumber tests and mock environment. Including the
network setup to allow aws bound calls to be routed internally within the Docker Network.

"
65,"lsp-medialive-conductor's ""Reverse-proxy
""","
This handles the ssl termination for the https requests the lambda code will try to
make to the mock aws services. Most of these have no or limited ssl support so the
reverse proxy can handle this and use plain http to the services.

A key advantage of this and the combination of Docker allows us to use the 'true' DNS
name of the aws endpoint and route it to a Docker container by using the aliases feature
of Docker networking. This allows us to make no changes to the endpoints the services use
to communicate out of the lambda.

"
66,"lsp-medialive-conductor's ""Cucumber
""","
The Cucumber tests are built into a Docker image and run inside the same network as the aws
services. This allows the standard ruby libraries to interact with AWS to continue working
without any alteration.

It also prevents the need to do any port mapping on the Docker host. This would have caused
issues on Build servers if two tests try to map the same port.

"
67,"lsp-medialive-conductor's ""Helpful Scripts
""","
These scripts allow you to run the code inside a representative lambda environment.
The command does not include the services that the lambda depends on such as S3 and
SNS. The component tests

```
docker run --rm -i \
-u root \
-e AWS_REGION=eu-west-1 \
-e BAD_MESSAGE_QUEUE_ARN=arn:aws:sqs:eu-west-1:790940428898:NeilTestMediaLiveEventQueue \
-e ISPY_TOPIC_ARN=arn:aws:sns:eu-west-1:790940428898:DummyJustConfiguratorIspyTopic \
-e DOCKER_LAMBDA_USE_STDIN=1 \
--mount type=volume,source=lsp-medialive-conductor-fake-certs,destination=/tmp/mock-certs \
lsp-medialive-conductor:latest uk.co.bbc.lsp_medialive_conductor.Main::handleRequest \
'{
""Records"": [
{
""messageId"": ""21cd887b-2e88-4a17-b20f-262844a95abe"",
""receiptHandle"": ""AQEBvr9yN9LLkg4yr+629KIUN+aIJ7dB/RvDLhichVWsRHC/fc+8+8Am5rQUckYO5Ga3I/baBoyh0R86Kt/5+/gQJsZCnPLFO8o7LHG80EgsSaAiwZ/h+ZADlc5WWcFhiFTuHJYwFjnwbkkRdwEr0oewmXtH0p+Yf0pwaoewctw0/UuXo/EGxUHQ0TRoA7KFCLnlU6/s4ZRLgM9DvylU3lwNCUR93uK7+RGTyS4qbFIimDYWaxXmC7tsLJcSqfTJUFdpJ+etuujdsxr8v2+GtOq5ERa5i6L3v6tWPgdY6t/QJqNxu2Oc14qVQK6b09uee/uiplJJ9yaRjH4+znnHo1NC+9jT5lpfrnRAM+cXNOfuxuOsChbtZP4Ih3X5D8NyF2XMBpCnT6GrapxQr31u11zR289sG6NWDjMWyoyKLU8clbZOT7c2sH5GmAHC/qOdJqNc"",
""eventSourceARN"": ""arn:aws: sqs:eu-west-1: 038610054328:IntModavSqsLambdaHelloWorldResources-Queue-852HEGR0Z31D"",
""eventSource"": ""aws:sqs"",
""awsRegion"": ""eu-west-1"",
""body"": ""{\""foo\"": \""bar\""}"",
""md5OfBody"": ""9bb58f26192e4ba00f01e2e7b136bbd8"",
""attributes"": {
""ApproximateReceiveCount"": 1,
""SentTimestamp"": 1565189036506,
""SenderId"": ""AROAIM2NUNJ5KAGKQ2DIM"",
""ApproximateFirstReceiveTimestamp"": ""1565189036545""
},
""messageAttributes"": {}
}
]
}'
```
```
docker run --rm -it \
-u root \
-e AWS_REGION=eu-west-1 \
-e BAD_MESSAGE_QUEUE_ARN=arn:aws:sqs:eu-west-1:790940428898:NeilTestMediaLiveEventQueue \
-e ISPY_TOPIC_ARN=arn:aws:sns:eu-west-1:790940428898:DummyJustConfiguratorIspyTopic \
-e DOCKER_LAMBDA_USE_STDIN=1 \
--mount type=volume,source=lsp-medialive-conductor-fake-certs,destination=/tmp/mock-certs \
--entrypoint /bin/bash \
lsp-medialive-conductor:latest
```

"
68,"lsp-medialive-conductor's ""Deploying Stacks
""","
Needs to be in this order:
- Resources
- Ispy
- Component
"
69,lsp-medialive-conductor Conductor handles any type of input creation 5xx response from Medialive /inputs?,"Given a ""create-livestream-many-inputs.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.input-creation-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""INPUT_CREATION_FAILED_IN_MEDIALIVE"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.input-creation-failed.notification' is emitted with the received attributes

"
70,lsp-medialive-conductor Conductor handles any type of channel creation 5xx response from Medialive /channels?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And Medialive /channels endpoint exists and will respond ""500""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input the following Ispys are emitted:
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-creation-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_CREATION_FAILED_IN_MEDIALIVE"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-creation-failure.notification' is emitted with the received attributes

"
71,lsp-medialive-conductor Conductor receives a message to create a livestream but state api /livestreams returns 5xx?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 500
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.livestream-persist-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""LIVESTREAM_DB_PERSIST_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.livestream-persist-failed.notification' is emitted

"
72,lsp-medialive-conductor Conductor receives a message to create a livestream but state api /slates returns 5xx?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 500
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.create-input-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""INPUT_CREATION_IN_DB_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.create-input-failed.notification' is emitted

"
73,lsp-medialive-conductor Conductor receives a message to create a livestream with inputs but state api /inputs returns 5xx?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /channels endpoint exists and will respond ""201""
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.medialive.input-persist-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""ML_INPUT_CREATION_IN_DB_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.input-persist-failed.notification' is emitted

"
74,lsp-medialive-conductor Conductor makes last retry 5xx failure in persisting channel to state api POST /channels?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""500"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.medialive.channel-persist-failed' is emitted
And an ispy event 'lsp-medialive-conductor.medialive.channel-persist-failed.notification' is emitted
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_CREATION_FAILED_IN_DB"" and statement ""createLivestreamFailed""

"
75,lsp-medialive-conductor Conductor receives a message to create a livestream with inputs but state api PUT /inputs returns 5xx?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 500
And Medialive /channels endpoint exists and will respond ""201""
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.medialive.input-update-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""ML_INPUT_UPDATE_IN_DB_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.input-update-failed.notification' is emitted

"
76,lsp-medialive-conductor Conductor fails to create a Elastic IP and sends to DLQ?,"Given a ""ww-hls-hls-slate-hd_single.json"" create livestream message
And the AWS EC2 api will respond to a ""allocate"" Elastic IP request
And MediaLive State API gateway /livestreams post endpoint exists and responds
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.livestream.record-already-exists' is emitted
And for each Input on the Livestream object a message is POSTed to the /slates API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And a 'AllocateAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.create-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""EIP_CREATE_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.eip.create-failed.notification' is emitted
# ww-hls-hls-slate-hd.json sets requireVpc to true

"
77,"lsp-medialive-conductor Conductor receives a message to create a livestream for simulcast, describe subnets returns 5xx error?","Given a ""uk-simulcast-hd-create-livestream.json"" create livestream message
And the AWS EC2 api will respond to a ""allocate"" Elastic IP request
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And the AWS EC2 api will respond to a describe subnets request
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created for simulcast with ispy event ""lsp-medialive-conductor.live.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And no 'GET' request to the '/inputs' endpoint
And for each Medialive input object for simulcast an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created for simulcast with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And a 'AllocateAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.created' is emitted with the received attributes
And a 'DescribeSubnets' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.error.subnet.describe-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""SUBNETS_DESCRIBE_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.error.subnet.describe-failed.notification' is emitted

"
78,lsp-medialive-conductor Conductor receives a message to switch an input?,"Given a switch input message with inputName ""LiveRTMP_cvid""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And Medialive live input schedule update endpoint for ""liveRTMP_cvid"" exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.channel-inputs.retrieved' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.input-attachment-name.retrieved' is emitted with the received attributes
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.processed' is emitted

"
79,lsp-medialive-conductor Conductor receives a message to switch an input?,"Given a switch input message with inputName ""LiveRTMP_cvid""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And Medialive default dog schedule update endpoint for ""liveRTMP_cvid"" exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.channel-inputs.retrieved' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.input-attachment-name.retrieved' is emitted with the received attributes
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.processed' is emitted

"
80,lsp-medialive-conductor Conductor receives a message to switch an input to a slate?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And Medialive slate input schedule update endpoint for ""slate_cvid"" exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.slate-input.retrieved' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.input-attachment-name.retrieved' is emitted with the received attributes
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.processed' is emitted

"
81,lsp-medialive-conductor Conductor receives a message to switch an input to a default end slate?,"Given a switch input message with inputName ""default-end""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200 for
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And Medialive slate input schedule update endpoint for ""slate_cvid"" exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.default-end-slate.retrieved' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.input-attachment-name.retrieved' is emitted with the received attributes
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.processed' is emitted

"
82,lsp-medialive-conductor Handle any 4xx error when BatchUpdateSchedule api call fails?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And Medialive slate input schedule update endpoint for ""slate_cvid"" exists and will respond with HTTP ""400""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.slate-input.retrieved' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.input-attachment-name.retrieved' is emitted with the received attributes
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule-creation-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""SCHEDULE_CREATION_FAILED_IN_MEDIALIVE"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.channel.schedule-creation-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
83,lsp-medialive-conductor Handle any type of channel stop 4xx response from Medialive.?,"We're expecting no retries and msg in fail q. Customer is sent notification
Given a switch input message with inputName ""LiveRTMP_cvid""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive describe channel endpoint exists and will respond with HTTP ""400""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.channel-inputs.retrieved' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.describe-channel-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""SCHEDULE_CREATION_FAILED_IN_MEDIALIVE"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.channel.describe-channel-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
84,lsp-medialive-conductor Handle any type of channel stop 5xx response from Medialive?,"Given a switch input message with inputName ""LiveRTMP_cvid""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive describe channel endpoint exists and will respond with HTTP ""500""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.channel-inputs.retrieved' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.describe-channel-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""SCHEDULE_CREATION_FAILED_IN_MEDIALIVE"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.channel.describe-channel-failed.notification' is emitted with the received attributes

"
85,lsp-medialive-conductor Handle any type of channel stop 4xx response from Medialive.?,"We're expecting no retries and msg in fail q. Customer is sent notification
Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
And Medialive describe channel endpoint exists and will respond with HTTP ""400""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.slate-input.retrieved' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.describe-channel-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""SCHEDULE_CREATION_FAILED_IN_MEDIALIVE"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.channel.describe-channel-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
86,lsp-medialive-conductor Handle any type of channel stop 5xx response from Medialive for the first time.?,"We're expecting retry to happen later. No notification to customer
Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
And Medialive describe channel endpoint exists and will respond with HTTP ""500""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.slate-input.retrieved' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.describe-channel-failed' is emitted with the received attributes

"
87,lsp-medialive-conductor Handle any 5xx error when BatchUpdateSchedule api call fails?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And Medialive slate input schedule update endpoint for ""slate_cvid"" exists and will respond with HTTP ""500""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.slate-input.retrieved' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.input-attachment-name.retrieved' is emitted with the received attributes
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule-creation-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""SCHEDULE_CREATION_FAILED_IN_MEDIALIVE"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.channel.schedule-creation-failed.notification' is emitted with the received attributes

"
88,lsp-medialive-conductor Handle any type of channel stop 5xx response from Medialive?,"AWS will put the original msq DLQ. Notification sent to customer
Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
And Medialive describe channel endpoint exists and will respond with HTTP ""500""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.slate-input.retrieved' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.describe-channel-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""SCHEDULE_CREATION_FAILED_IN_MEDIALIVE"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.channel.describe-channel-failed.notification' is emitted with the received attributes


"
89,lsp-medialive-conductor Conductor sends a message to the encoding output topic when getting 4xx on getting channel?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""400"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
90,lsp-medialive-conductor Conductor sends a message to the encoding output topic when getting 5xx on getting channel?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""500"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed.notification' is emitted with the received attributes

"
91,lsp-medialive-conductor Conductor sends a message to the encoding output topic when no channel returned?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns empty HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-record-notfound' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.channel-record-notfound.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
92,lsp-medialive-conductor SwitchInput but GET Input returns empty?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 404
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.inputs-record-notfound' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_INPUT_FAILED"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.inputs-record-notfound.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
93,lsp-medialive-conductor SwitchInput but GET Input fails with 4xx?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 400
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_INPUT_FAILED"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
94,lsp-medialive-conductor SwitchInput but GET Input fails with 5xx?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 500
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_INPUT_FAILED"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed.notification' is emitted with the received attributes

"
95,lsp-medialive-conductor SwitchInput but GET Slate fails with 4xx?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 400
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.slate-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_SLATE_FAILED"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.slate-retrieve-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
96,lsp-medialive-conductor SwitchInput but GET Slate fails with 5xx?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 500
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.slate-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_SLATE_FAILED"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.slate-retrieve-failed.notification' is emitted with the received attributes

"
97,lsp-medialive-conductor SwitchInput but GET Slate returns no slate?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/slates"" ""GET"" endpoint returns empty HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.slate-record-notfound' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_SLATE_FAILED"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.slate-record-notfound.notification' is emitted with the received attributes

"
98,lsp-medialive-conductor SwitchInput but PUT channel fails with 4xx?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""400"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-update-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DB_UPDATE_FAILED"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.channel-update-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
99,lsp-medialive-conductor SwitchInput but PUT channel fails with 5xx?,"Given a switch input message with inputName ""slate_name""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""500"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-update-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DB_UPDATE_FAILED"" and statement ""switchInputFailed""
And an ispy event 'lsp-medialive-conductor.channel-update-failed.notification' is emitted with the received attributes

"
100,lsp-medialive-conductor Conductor receives a message with leg id to switch an input?,"Given a switch input message with inputName ""LiveRTMP_cvid"" and leg id
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And Medialive live input schedule update endpoint for ""liveRTMP_cvid"" exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.channel-inputs.retrieved' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.input-attachment-name.retrieved' is emitted with the received attributes
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.processed' is emitted

"
101,lsp-medialive-conductor Conductor receives a message to switch an input without a leg id in the request?,"Given a switch input message with inputName ""LiveRTMP_cvid""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And Medialive live input schedule update endpoint for ""liveRTMP_cvid"" exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.channel-inputs.retrieved' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.input-attachment-name.retrieved' is emitted with the received attributes
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.processed' is emitted

"
102,lsp-medialive-conductor Conductor fails to process switch input message after retrieving multiple channel records and sends to fail queue?,"Given a switch input message with inputName ""LiveRTMP_cvid""
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200 for channel_arn
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200 for channel_arn
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200
And Medialive describe channel endpoint exists and will respond with HTTP ""200"" for channel_arn ""arn:aws:medialive:eu-west-1:038610054328:channel:3887246""
And Medialive describe channel endpoint exists and will respond with HTTP ""200"" for channel_arn ""arn:aws:medialive:eu-west-1:038610054328:channel:3887247""
And Medialive live input schedule update endpoint for ""liveRTMP_cvid"" exists and will respond with HTTP ""200"" for channel_arn ""arn:aws:medialive:eu-west-1:038610054328:channel:3887246""
And Medialive live input schedule update endpoint for ""liveRTMP_cvid"" exists and will respond with HTTP ""200"" for channel_arn ""arn:aws:medialive:eu-west-1:038610054328:channel:3887247""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.switch-input.received' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.channel-inputs.retrieved' is emitted with the received attributes
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/channels/channelId' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.input-attachment-name.retrieved' is emitted with the received attributes
And a 'PUT' request is sent to the Medialive '/channels/channelId/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.processed' is emitted

"
103,lsp-medialive-conductor Conductor receives a message and handles any type of channel creation 4xx response from Medialive?,"#  We're expecting no retries and msg in fail q. Customer is sent notification
Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And Medialive /channels endpoint exists and will respond ""400""
When the message arrives from the input queue
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.medialive.channel-creation-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_CREATION_FAILED_IN_MEDIALIVE"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-creation-failure.notification' is emitted with the received attributes
And the message is sent to the fail queue

Scenario Outline: Conductor receives a message to create a livestream but a record already exists in state api /livestreams and returns HTTP 409
Given a ""<create_livestream_fixture>"" create livestream message
And MediaLive State API gateway /livestreams post endpoint exists and responds
And MediaLive State API gateway /slates post endpoint exists and responds
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""201"" with
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.livestream.record-already-exists' is emitted
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And an ispy event 'lsp-medialive-conductor.channel.creating' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel.persisted' is emitted with the received attributes
And each Medialive input object is updated with the channel arn with a 'PUT' request to the /inputs endpoint
Examples:

Scenario Outline: Conductor receives a message to create a slate input but a record already exists in state api slates and returns 409
Given a ""<create_livestream_fixture>"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And MediaLive State API gateway /slates post endpoint exists and responds
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""201"" with
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.slate-input.record-already-exists' is emitted
And a notification is sent to the encoding output topic with error class ""LIVESTREAM_SLATE_INPUT_ALREADY_EXISTS"" and statement ""inputAlreadyCreated""
And an ispy event 'lsp-medialive-conductor.slate-input.record-already-exists.notification' is emitted
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And an ispy event 'lsp-medialive-conductor.channel.creating' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel.persisted' is emitted with the received attributes
And each Medialive input object is updated with the channel arn with a 'PUT' request to the /inputs endpoint
Examples:

"
104,lsp-medialive-conductor Conductor receives a message to create a livestream but state api POST /livestreams returns 400?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 400
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.livestream-persist-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""LIVESTREAM_DB_PERSIST_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.livestream-persist-failed.notification' is emitted
And the message is sent to the fail queue

"
105,lsp-medialive-conductor Conductor receives a message to create a livestream but state api POST /slates returns 400?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 400
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.create-input-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""INPUT_CREATION_IN_DB_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.create-input-failed.notification' is emitted
And the message is sent to the fail queue

"
106,lsp-medialive-conductor Conductor receives a message to create a livestream with inputs but state api POST /inputs returns 4xx?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /channels endpoint exists and will respond ""201""
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.medialive.input-persist-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""ML_INPUT_CREATION_IN_DB_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.input-persist-failed.notification' is emitted
And the message is sent to the fail queue

"
107,lsp-medialive-conductor Conductor receives a message to create a livestream and handles any type of input creation 4xx response from Medialive?,"#  We're expecting no retries and a msg in fail queue. Customer is sent notification
Given a ""create-livestream-many-inputs.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And the message is sent to the fail queue
And an ispy event 'lsp-medialive-conductor.medialive.input-creation-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""INPUT_CREATION_FAILED_IN_MEDIALIVE"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.input-creation-failed.notification' is emitted with the received attributes

"
108,lsp-medialive-conductor Conductor receives 4xx failure when persisting to state api /channel?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""400"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.medialive.channel-persist-failed' is emitted
And an ispy event 'lsp-medialive-conductor.medialive.channel-persist-failed.notification' is emitted
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_CREATION_FAILED_IN_DB"" and statement ""createLivestreamFailed""
And the message is sent to the fail queue

"
109,lsp-medialive-conductor Conductor fails to create a Elastic IP and sends to fail queue?,"Given a ""ww-hls-hls-slate-hd_single.json"" create livestream message
And the AWS EC2 api will respond to a ""allocate"" Elastic IP request
And MediaLive State API gateway /livestreams post endpoint exists and responds
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.livestream.record-already-exists' is emitted
And for each Input on the Livestream object a message is POSTed to the /slates API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And a 'AllocateAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.create-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""EIP_CREATE_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.eip.create-failed.notification' is emitted
And the message is sent to the fail queue
# ww-hls-hls-slate-hd.json sets requireVpc to true

"
110,"lsp-medialive-conductor Conductor receives a message to create a livestream for simulcast, fails to describe subnets?","Given a ""uk-simulcast-hd-create-livestream.json"" create livestream message
And the AWS EC2 api will respond to a ""allocate"" Elastic IP request
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And the AWS EC2 api will respond to a describe subnets request
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created for simulcast with ispy event ""lsp-medialive-conductor.live.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And no 'GET' request to the '/inputs' endpoint
And for each Medialive input object for simulcast an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created for simulcast with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And a 'AllocateAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.created' is emitted with the received attributes
And a 'DescribeSubnets' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.error.subnet.describe-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""SUBNETS_DESCRIBE_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.error.subnet.describe-failed.notification' is emitted
And the message is sent to the fail queue
"
111,lsp-medialive-conductor Conductor receives a deleteLivestream message for simulcast?,"Given a ""delete-livestream-deel.json"" message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.delete-livestream.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'DELETE' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.deleting' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
112,lsp-medialive-conductor Conductor ignores delete livestream messages for events?,"Given a ""delete-livestream-deel.json"" message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.delete-livestream.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
Then an ispy event 'lsp-medialive-conductor.delete-livestream.ignored' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""DELETE_LIVESTREAM_IGNORED"" and statement ""deleteLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.delete-livestream.ignored.notification' is emitted with the received attributes

"
113,lsp-medialive-conductor Conductor receives a deleteLivestream message for simulcast returning no records?,"Given a ""delete-livestream-deel-with-leg-id.json"" message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.delete-livestream.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel-record-notfound' is emitted with the received attributes
And the message is sent to the fail queue
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""deleteLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel-record-notfound.notification' is emitted

"
114,lsp-medialive-conductor Conductor receives a deleteLivestream message for simulcast and returns 400?,"Given a ""delete-livestream-deel.json"" message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""400"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.delete-livestream.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed' is emitted with the received attributes
And the message is sent to the fail queue
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""deleteLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed.notification' is emitted

"
115,lsp-medialive-conductor Conductor receives a deleteLivestream message for simulcast and returns 5xx and is sent to the DLQ?,"Given a ""delete-livestream-deel.json"" message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""500"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.delete-livestream.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""deleteLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed.notification' is emitted

"
116,lsp-medialive-conductor Conductor fails to update channel record to ERROR after delete channel request to Medialive fails?,"Given a ""delete-livestream-deel.json"" message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""400"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""400""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.delete-livestream.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'DELETE' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DB_UPDATE_FAILED"" and statement ""deleteLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed.notification' is emitted
And the message is sent to the fail queue

"
117,lsp-medialive-conductor Conductor fails to update channel record to ERROR after delete channel request to Medialive fails?,"Given a ""delete-livestream-deel.json"" message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""500"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""500""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.delete-livestream.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'DELETE' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DB_UPDATE_FAILED"" and statement ""deleteLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed.notification' is emitted

"
118,lsp-medialive-conductor Conductor fails to update channel record to DELETED after delete channel request to Medialive succeeds?,"Given a ""delete-livestream-deel.json"" message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""400"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.delete-livestream.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'DELETE' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.deleting' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DB_UPDATE_FAILED"" and statement ""deleteLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed.notification' is emitted
And the message is sent to the fail queue

"
119,lsp-medialive-conductor Conductor fails to update channel record to DELETED after delete channel request to Medialive succeeds?,"Given a ""delete-livestream-deel.json"" message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""500"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.delete-livestream.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'DELETE' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.deleting' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DB_UPDATE_FAILED"" and statement ""deleteLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed.notification' is emitted

"
120,lsp-medialive-conductor receive 4XX when deleting a channel?,"Given a ""delete-livestream-deel.json"" message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""400""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.delete-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
Then a 'DELETE' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And a failure notification is sent to the encoding output topic with error class ""DELETE_CHANNEL_FAILED_IN_MEDIALIVE"" and statement ""deleteLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed.notification' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes
And the message is sent to the fail queue

"
121,lsp-medialive-conductor receive 5XX when deleting a channel?,"Given a ""delete-livestream-deel.json"" message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""500""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.delete-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
Then a 'DELETE' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And a failure notification is sent to the encoding output topic with error class ""DELETE_CHANNEL_FAILED_IN_MEDIALIVE"" and statement ""deleteLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed.notification' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes
"
122,lsp-medialive-conductor Conductor receives a message to create a livestream with HLS profile and vpc settings?,"Given a ""ww-hls-hls-slate-hd_single.json"" create livestream message
And the AWS EC2 api will respond to a ""allocate"" Elastic IP request
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""201"" with
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input on the Livestream object a message is POSTed to the /slates API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And a 'AllocateAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.created' is emitted with the received attributes
And a 'DescribeSubnets' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.channel.creating' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel.persisted' is emitted with the received attributes
And each Medialive input object is updated with the channel arn with a 'PUT' request to the /inputs endpoint
# ww-hls-hls-slate-hd_single.json sets requireVpc to true

"
123,lsp-medialive-conductor Conductor receives a message to create a livestream and /channels get before post finds a channel?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input on the Livestream object a message is POSTed to the /slates API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And an ispy event 'lsp-medialive-conductor.medialive-channel.record-already-exists' is emitted with the received attributes
And each Medialive input object is updated with the channel arn with a 'PUT' request to the /inputs endpoint

"
124,lsp-medialive-conductor Conductor receives a message to create a livestream and /channels get before post returns 400?,"Given a ""uk-rtmp-hls-slate_single.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""400"" with
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input on the Livestream object a message is POSTed to the /slates API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And an ispy event 'lsp-medialive-conductor.medialive-channel.retrieve-failed' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel.creating' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel.persisted' is emitted with the received attributes
And each Medialive input object is updated with the channel arn with a 'PUT' request to the /inputs endpoint

"
125,lsp-medialive-conductor Conductor receives a message to create a livestream with source input urls?,"Given a ""create-livestream.source-input-urls.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""400"" with
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input on the Livestream object a message is POSTed to the /slates API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And an ispy event 'lsp-medialive-conductor.medialive-channel.retrieve-failed' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel.creating' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel.persisted' is emitted with the received attributes
And each Medialive input object is updated with the channel arn with a 'PUT' request to the /inputs endpoint

Scenario Outline: Conductor receives a message to create a livestream and does not create medialive input if it exists in db
Given a ""<create_livestream_fixture>"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input on the Livestream object a message is POSTed to the /slates API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And a 'GET' to the '/inputs' API gateway endpoint
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following Medialive input is found in the db with ispy event ""lsp-medialive-conductor.medialive.input.record-already-exists""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And an ispy event 'lsp-medialive-conductor.channel.creating' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel.persisted' is emitted with the received attributes
And each Medialive input object is updated with the channel arn with a 'PUT' request to the /inputs endpoint
Examples:

Scenario Outline: Conductor creates inputs and proceeds on happy path after GET to state api /inputs returns 4xx
Given a ""<create_livestream_fixture>"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input on the Livestream object a message is POSTed to the /slates API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And a 'GET' to the '/inputs' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.input.retrieve-failed' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.input.retrieve-failed' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.input.retrieve-failed' is emitted with the received attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And an ispy event 'lsp-medialive-conductor.channel.creating' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel.persisted' is emitted with the received attributes
And each Medialive input object is updated with the channel arn with a 'PUT' request to the /inputs endpoint
Examples:

Scenario Outline: Conductor retrieves RTMP profile based on encoder resilience model
Given a ""<create_livestream_fixture>"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""201"" with
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input on the Livestream object a message is POSTed to the /slates API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And an ispy event 'lsp-medialive-conductor.channel.creating' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel.persisted' is emitted with the received attributes
And each Medialive input object is updated with the channel arn with a 'PUT' request to the /inputs endpoint
Examples:

Scenario Outline: Conductor retrieves HLS profile based on encoder resilience model
Given a ""<create_livestream_fixture>"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""201"" with
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input on the Livestream object a message is POSTed to the /slates API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.profile.retrieved' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream.profile-name.updated' is emitted with the received attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.live.input.created""
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.slate.input.created""
And each Medialive input object is POSTed to the /inputs endpoint
And for each Medialive input object an ispy event 'lsp-medialive-conductor.medialive.input.persisted' is emitted with the following attributes
And the following MediaLive inputs have been created with ispy event ""lsp-medialive-conductor.medialive.input-created.notification""
And an ispy event 'lsp-medialive-conductor.channel.creating' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel.persisted' is emitted with the received attributes
And each Medialive input object is updated with the channel arn with a 'PUT' request to the /inputs endpoint
Examples:

"
126,lsp-medialive-conductor Conductor can not find a profile for the create livestream request?,"Given a ""create-livestream.unknown.json"" create livestream message
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-livestream.request.received' is emitted with the received attributes
And a 'POST' to the '/livestreams' API gateway endpoint
And for each Input on the Livestream object a message is POSTed to the /slates API gateway endpoint
And for each Input the following Ispys are emitted:
And for each Input an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-livestream.persisted' is emitted with the received attributes
And the message is sent to the fail queue
And a profile failure notification is sent to the encoding output topic
And an ispy event 'lsp-medialive-conductor.profile.retrieval.failed' is emitted with the received attributes

"
127,lsp-medialive-conductor Not enough packager uris in request for encoder resilience model B so conductor fails to create livestream?,"Given a ""uk-simulcast-hd-create-livestream-insufficient-packager-uris.json"" create livestream message
And the AWS EC2 api will respond to a ""allocate"" Elastic IP request
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And the AWS EC2 api will respond to a describe subnets request
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""201"" with
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.eip.created' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""CREATE_LIVESTREAM_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.insufficient-data' is emitted
And an ispy event 'lsp-medialive-conductor.medialive.insufficient-data.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
128,lsp-medialive-conductor Not enough packager uris in request for encoder resilience model B so conductor fails to create livestream?,"Given a ""uk-simulcast-hd-create-livestream-missing-private-push-packager-endpoint.json"" create livestream message
And the AWS EC2 api will respond to a ""allocate"" Elastic IP request
And Medialive State API gateway /livestreams post endpoint exists and will respond with HTTP 201
And MediaLive State API ""/inputs"" ""GET"" endpoint exists and responds:
And Medialive State API gateway /inputs post endpoint exists for each input
And Medialive State API gateway /inputs put endpoint exists and will respond with HTTP 200
And Medialive /inputs endpoint exists and will respond to:
And the AWS EC2 api will respond to a describe subnets request
And Medialive /channels endpoint exists and will respond ""201""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""201"" with profile name
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""201"" with
And MediaLive State API ""/channels"" ""POST"" endpoint returns HTTP ""201"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.eip.created' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""CREATE_LIVESTREAM_FAILED"" and statement ""createLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.error.no-matching-packager-url' is emitted
And an ispy event 'lsp-medialive-conductor.error.no-matching-packager-url.notification' is emitted with the received attributes
And the message is sent to the fail queue
"
129,lsp-medialive-conductor Conductor receives a message to amend an overlay and dog position none?,"Given an ""amend-overlay-none.json"" amend overlay message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive schedule endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.amend-overlay.request.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event ""lsp-medialive-conductor.channel.overlay.deactivated"" is emitted

"
130,lsp-medialive-conductor Conductor receives a message to amend an overlay and dog position top left?,"Given an ""amend-overlay-tl.json"" amend overlay message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive schedule endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.amend-overlay.request.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event ""lsp-medialive-conductor.channel.overlay.amended"" is emitted

"
131,lsp-medialive-conductor Conductor receives a message to amend an overlay and dog position top right?,"Given an ""amend-overlay-tr.json"" amend overlay message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive schedule endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.amend-overlay.request.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event ""lsp-medialive-conductor.channel.overlay.amended"" is emitted

"
132,lsp-medialive-conductor Conductor receives a message to amend an overlay and dog position top right for simulcast?,"Given an ""amend-overlay-tr.json"" amend overlay message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive schedule endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.amend-overlay.request.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event ""lsp-medialive-conductor.channel.overlay.amended"" is emitted

"
133,lsp-medialive-conductor Conductor receives discards amend-overlay message if no dog selected?,"Given an ""amend-overlay-tr.json"" amend overlay message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.amend-overlay.request.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And an ispy event ""lsp-medialive-conductor.amend-overlay.discarded"" is emitted

"
134,lsp-medialive-conductor Conductor receives a message to amend an overlay and batchschedule medialive API operation returns 4xx?,"Given an ""amend-overlay-tr.json"" amend overlay message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive schedule endpoint exists and will respond with HTTP ""400""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.amend-overlay.request.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.channel.amend-overlay-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""SCHEDULE_CREATION_FAILED_IN_MEDIALIVE"" and statement ""amendOverlayFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel.amend-overlay-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
135,lsp-medialive-conductor Conductor receives a message to amend an overlay and batchschedule medialive API operation returns 5xx?,"Given an ""amend-overlay-tr.json"" amend overlay message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive schedule endpoint exists and will respond with HTTP ""500""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.amend-overlay.request.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.channel.amend-overlay-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""SCHEDULE_CREATION_FAILED_IN_MEDIALIVE"" and statement ""amendOverlayFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel.amend-overlay-failed.notification' is emitted with the received attributes

"
136,lsp-medialive-conductor Conductor receives a message to amend an overlay and Get channels returns 4xx?,"Given an ""amend-overlay-none.json"" amend overlay message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""400"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.amend-overlay.request.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""amendOverlayFailed""
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
137,lsp-medialive-conductor Conductor receives a message to amend an overlay and Get channels returns 5xx?,"Given an ""amend-overlay-none.json"" amend overlay message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""500"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.amend-overlay.request.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""amendOverlayFailed""
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed.notification' is emitted with the received attributes

"
138,lsp-medialive-conductor LivestreamStarted?,"Given a livestream started message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 200 for
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And Medialive live input schedule update endpoint for ""slate_cvid"" exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-started.received' is emitted
Then an ispy event 'lsp-medialive-conductor.livestream-started.default-slate-input.retrieved' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
Then an ispy event 'lsp-medialive-conductor.switch-input.target-input.updated' is emitted
And a 'GET' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.input-attachment-name.retrieved' is emitted with the received attributes
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.switch-input.processed' is emitted

"
139,lsp-medialive-conductor LivestreamStarted for simulcast?,"Given a livestream started message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-started.received' is emitted
And an ispy event 'lsp-medialive-conductor.livestream-started.discarded' is emitted

"
140,lsp-medialive-conductor LivestreamStarted but GET Slate fails with 4xx?,"Given a livestream started message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 400 for
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And Medialive live input schedule update endpoint for ""liveRTMP_cvid"" exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-started.received' is emitted
And an ispy event 'lsp-medialive-conductor.livestream-started.default-slate-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_SLATE_FAILED"" and statement ""livestreamStartedFailed""
And an ispy event 'lsp-medialive-conductor.livestream-started.default-slate-retrieve-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
141,lsp-medialive-conductor LivestreamStarted but GET Slate fails with 5xx?,"Given a livestream started message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /slates get endpoint exists and will respond with HTTP 500 for
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And Medialive live input schedule update endpoint for ""liveRTMP_cvid"" exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-started.received' is emitted
And an ispy event 'lsp-medialive-conductor.livestream-started.default-slate-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_SLATE_FAILED"" and statement ""livestreamStartedFailed""
And an ispy event 'lsp-medialive-conductor.livestream-started.default-slate-retrieve-failed.notification' is emitted with the received attributes

"
142,lsp-medialive-conductor LivestreamStarted but GET Slate returns no slate?,"Given a livestream started message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/slates"" ""GET"" endpoint returns empty HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-started.received' is emitted
And an ispy event 'lsp-medialive-conductor.livestream-started.default-slate-record-notfound' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_SLATE_FAILED"" and statement ""livestreamStartedFailed""
And an ispy event 'lsp-medialive-conductor.livestream-started.default-slate-record-notfound.notification' is emitted with the received attributes
"
143,lsp-medialive-conductor Conductor receives a message that a livestream has been stopped?,"Given a livestream stopped message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-stopped.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
Then a 'DELETE' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.deleting' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
144,lsp-medialive-conductor Conductor discards message if workflow type is simulcast and does not progress rest of workflow?,"Given a livestream stopped message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-stopped.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream-stopped.discarded' is emitted with the received attributes

"
145,lsp-medialive-conductor receive 404 from Medialive when deleting a channel and continue as it would have been success?,"Given a livestream stopped message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""404""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-stopped.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
Then a 'DELETE' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.medialive.channel.already-deleted' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
146,lsp-medialive-conductor receive 4XX when deleting a channel?,"Given a livestream stopped message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""400""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-stopped.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
Then a 'DELETE' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And a failure notification is sent to the encoding output topic with error class ""DELETE_CHANNEL_FAILED_IN_MEDIALIVE"" and statement ""livestreamStoppedFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed.notification' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes
And the message is sent to the fail queue

"
147,lsp-medialive-conductor receive 5XX when deleting a channel?,"Given a livestream stopped message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""500""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-stopped.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
Then a 'DELETE' request is sent to the Medialive '/prod/channels/3887246' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And a failure notification is sent to the encoding output topic with error class ""DELETE_CHANNEL_FAILED_IN_MEDIALIVE"" and statement ""livestreamStoppedFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed.notification' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes

Scenario Outline: error when updating channel after delete channel failed
Given a livestream stopped message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive delete channel endpoint exists and will respond with HTTP ""400""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""<status-code>""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-stopped.received' is emitted
Then an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""DELETE_CHANNEL_FAILED_IN_MEDIALIVE"" and statement ""livestreamStoppedFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-delete-failed.notification' is emitted
Then an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed.notification' is emitted
Examples:
"
148,lsp-medialive-conductor Conductor receives a message to stop a livestream?,"Given a 'stop-livestream-deel.json' message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive stop channel endpoint exists for the following channel arns and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.stop-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/stop' endpoint
And an ispy event 'lsp-medialive-conductor.channel.stopping' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
149,lsp-medialive-conductor Conductor receives a message to stop a livestream for simulcast with leg id in body of request?,"Given a 'stop-livestream-deel-leg-id.json' message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive stop channel endpoint exists for the following channel arns and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.stop-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/stop' endpoint
And an ispy event 'lsp-medialive-conductor.channel.stopping' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
150,lsp-medialive-conductor Handle any type of channel stop 4xx response from Medialive.?,"We're expecting no retries and msg in fail q. Customer is sent notification
Given a 'stop-livestream-deel.json' message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive stop channel endpoint exists for the following channel arns and will respond with HTTP ""400""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.stop-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/stop' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-stop-failed' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And a failure notification is sent to the encoding output topic with error class ""STOP_CHANNEL_FAILED_IN_MEDIALIVE"" and statement ""stopLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-stop-failed.notification' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes
And the message is sent to the fail queue

"
151,lsp-medialive-conductor Handle any type of channel stop 5xx response from Medialive?,"Given a 'stop-livestream-deel.json' message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive stop channel endpoint exists for the following channel arns and will respond with HTTP ""500""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.stop-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/stop' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-stop-failed' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And a failure notification is sent to the encoding output topic with error class ""STOP_CHANNEL_FAILED_IN_MEDIALIVE"" and statement ""stopLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-stop-failed.notification' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes

"
152,lsp-medialive-conductor Conductor receives a 5xx error from Api Gateway and fails to update the channel state?,"Given a 'stop-livestream-deel.json' message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""500"" with
And Medialive stop channel endpoint exists for the following channel arns and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.stop-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/stop' endpoint
And an ispy event 'lsp-medialive-conductor.channel.stopping' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DB_UPDATE_FAILED"" and statement ""stopLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed.notification' is emitted

"
153,lsp-medialive-conductor Handle any type of channel stop 4xx response from Medialive.?,"We're expecting no retries and msg in fail q. Customer is sent notification
Given a 'stop-livestream-deel.json' message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive stop channel endpoint exists for the following channel arns and will respond with HTTP ""400""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""400"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.stop-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/stop' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-stop-failed' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DB_UPDATE_FAILED"" and statement ""stopLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed.notification' is emitted
And the message is sent to the fail queue

"
154,lsp-medialive-conductor Handle any type of channel stop 4xx response from Medialive.?,"Given a 'stop-livestream-deel.json' message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive stop channel endpoint exists for the following channel arns and will respond with HTTP ""400""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""500"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.stop-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/stop' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-stop-failed' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DB_UPDATE_FAILED"" and statement ""stopLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed.notification' is emitted


# this scenario is a common test that Conductor receives any error message from medialive api, and receives error to update channel state DB
"
155,"lsp-medialive-conductor Handle error message from medialive api, and receive error to update channel state DB?","We're expecting msg in fail queue for medialive api exception, and fail notification for both medialive and state api
Given a 'stop-livestream-deel.json' message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive stop channel endpoint exists for the following channel arns and will respond with HTTP ""400""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""400"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.stop-livestream.received' is emitted
And a 'GET' to the '/channels' API gateway endpoint
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/stop' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-stop-failed' is emitted
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DB_UPDATE_FAILED"" and statement ""stopLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-update-failed.notification' is emitted
And a failure notification is sent to the encoding output topic with error class ""STOP_CHANNEL_FAILED_IN_MEDIALIVE"" and statement ""stopLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-stop-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
156,lsp-medialive-conductor Conductor receives a message to stop a livestream for simulcast but missing leg id in body of request?,"Given a 'stop-livestream-deel.json' message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.stop-livestream.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
Then a failure notification is sent to the encoding output topic with error class ""STOP_LIVESTREAM_FAILED"" and statement ""stopLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-stop-failed' is emitted
And an ispy event 'lsp-medialive-conductor.channel.channel-stop-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
157,lsp-medialive-conductor Conductor receives a message to stop a livestream for events with no leg id with multiple channels?,"Given a 'stop-livestream-deel.json' message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.stop-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a failure notification is sent to the encoding output topic with error class ""MULTIPLE_CHANNEL_RECORDS_FOUND"" and statement ""stopLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel.multiple-records-found' is emitted
And an ispy event 'lsp-medialive-conductor.channel.multiple-records-found.notification' is emitted with the received attributes
And the message is sent to the fail queue
"
158,lsp-medialive-conductor Conductor receives a message to create an input?,"Given a ""create-input.json"" create input message
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 201
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-input.request.received' is emitted with the received attributes
And a message is POSTed with the details received on the queue to the /slates API gateway endpoint
And an inputCreated DEEL message is published to the encoding output topic
And an ispy event 'lsp-medialive-conductor.create-input.notification.success' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.create-input.successful' is emitted with the received attributes

"
159,lsp-medialive-conductor Conductor receives a message to create a slate input but record already exists in state api slates and returns 4xx?,"Given a ""create-input.json"" create input message
And MediaLive State API gateway /slates post endpoint exists and responds
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-input.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.slate-input.record-already-exists' is emitted
And a notification is sent to the encoding output topic with error class ""LIVESTREAM_SLATE_INPUT_ALREADY_EXISTS"" and statement ""inputAlreadyCreated""
And an ispy event 'lsp-medialive-conductor.slate-input.record-already-exists.notification' is emitted

"
160,lsp-medialive-conductor Conductor receives a message to create an input but slates returns 500?,"Given a ""create-input.json"" create input message
And Medialive State API gateway /slates post endpoint exists and will respond with HTTP 500
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.create-input.request.received' is emitted
And an ispy event 'lsp-medialive-conductor.create-input-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""INPUT_CREATION_IN_DB_FAILED"" and statement ""createInputFailed""
And an ispy event 'lsp-medialive-conductor.create-input-failed.notification' is emitted
"
161,lsp-medialive-conductor Conductor receives a message to start a livestream?,"Given a start livestream message
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""200""
And Medialive start channel endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.start-livestream.start-time.updated' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
162,lsp-medialive-conductor Conductor receives a message to start a livestream without leg id?,"Given a start livestream message
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""200""
And Medialive start channel endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.start-livestream.start-time.updated' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
163,lsp-medialive-conductor Conductor receives a message to start a livestream?,"Given a start livestream message with leg id
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""200""
And Medialive start channel endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.start-livestream.start-time.updated' is emitted with the received attributes
And a 'PUT' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
164,lsp-medialive-conductor Handle multiple channel records valid for simulcast or events?,"Given a start livestream message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200 for channel_arn
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200 for channel_arn
And Medialive schedule endpoint exists and will respond with HTTP ""200"" for arn ""arn:aws:medialive:eu-west-1:038610054328:channel:3887246""
And Medialive schedule endpoint exists and will respond with HTTP ""200"" for arn ""arn:aws:medialive:eu-west-1:038610054328:channel:3887247""
And Medialive start channel endpoint exists and will respond with HTTP ""200"" for channel_arn
And Medialive start channel endpoint exists and will respond with HTTP ""200"" for channel_arn
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'PUT' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
And a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes for arn 'arn:aws:medialive:eu-west-1:038610054328:channel:3887246'
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes for arn 'arn:aws:medialive:eu-west-1:038610054328:channel:3887247'
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
165,lsp-medialive-conductor Handle multiple channel records valid for simulcast or events?,"Given a livestream created message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200 for channel_arn
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200 for channel_arn
And Medialive schedule endpoint exists and will respond with HTTP ""200"" for arn ""arn:aws:medialive:eu-west-1:038610054328:channel:3887246""
And Medialive schedule endpoint exists and will respond with HTTP ""200"" for arn ""arn:aws:medialive:eu-west-1:038610054328:channel:3887247""
And Medialive start channel endpoint exists and will respond with HTTP ""200"" for channel_arn
And Medialive start channel endpoint exists and will respond with HTTP ""200"" for channel_arn
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
And a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes for arn 'arn:aws:medialive:eu-west-1:038610054328:channel:3887246'
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes for arn 'arn:aws:medialive:eu-west-1:038610054328:channel:3887247'
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
166,"lsp-medialive-conductor Conductor receives a message to start a livestream, channel already exists?","Given a start livestream message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""200""
And Medialive start channel endpoint exists and will respond with HTTP ""400""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.start-livestream.start-time.updated' is emitted with the received attributes
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-start-failed' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And a failure notification is sent to the encoding output topic with error class ""START_CHANNEL_FAILED_IN_MEDIALIVE"" and statement ""startLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-start-failed.notification' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes
And the message is sent to the fail queue

"
167,"lsp-medialive-conductor Conductor receives a message to start a livestream, fails to update the channel in db?","Given a start livestream message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""200""
And Medialive start channel endpoint exists and will respond with HTTP ""500""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'PUT' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.start-livestream.start-time.updated' is emitted with the received attributes
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-start-failed' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And a failure notification is sent to the encoding output topic with error class ""START_CHANNEL_FAILED_IN_MEDIALIVE"" and statement ""startLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-start-failed.notification' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes

"
168,lsp-medialive-conductor Conductor sends a message to the encoding output topic when getting 4xx on updating start time?,"Given a start livestream message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""400"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""200""
And Medialive start channel endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.livestream.update-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""LIVESTREAM_DB_UPDATE_FAILED"" and statement ""startLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.livestream.update-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
169,lsp-medialive-conductor Conductor sends a message to the encoding output topic when getting 5xx on updating start time?,"Given a start livestream message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""500"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""200""
And Medialive start channel endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.livestream.update-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""LIVESTREAM_DB_UPDATE_FAILED"" and statement ""startLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.livestream.update-failed.notification' is emitted with the received attributes

"
170,lsp-medialive-conductor Conductor sends a message to the encoding output topic when getting 4xx on getting channel?,"Given a start livestream message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""400"" with
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""startLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
171,lsp-medialive-conductor Conductor sends a message to the encoding output topic when no channel returned?,"Given a start livestream message
And MediaLive State API ""/channels"" ""GET"" endpoint returns empty HTTP ""200""
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-record-notfound' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""startLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel-record-notfound.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
172,lsp-medialive-conductor Conductor sends a message to the encoding output topic when getting 5xx on getting channel?,"Given a start livestream message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""500"" with
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""startLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed.notification' is emitted with the received attributes

"
173,lsp-medialive-conductor Conductor sends a message to the encoding output topic when getting 4xx on getting Inputs?,"Given a start livestream message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 400
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_INPUT_FAILED"" and statement ""startLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed.notification' is emitted
And the message is sent to the fail queue

"
174,lsp-medialive-conductor Conductor sends a message to the encoding output topic when getting 404 on getting Inputs?,"Given a start livestream message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 404
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted
And an ispy event 'lsp-medialive-conductor.inputs-record-notfound' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_INPUT_FAILED"" and statement ""startLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.inputs-record-notfound.notification' is emitted
And the message is sent to the fail queue

"
175,lsp-medialive-conductor Conductor sends a message to the encoding output topic when getting 5xx on getting Inputs?,"Given a start livestream message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 500
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.start-livestream.received' is emitted
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_INPUT_FAILED"" and statement ""startLivestreamFailed""
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed.notification' is emitted
"
176,lsp-medialive-conductor Conductor receives a message that a livestream has been created?,"Given a livestream created message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""200""
And Medialive start channel endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
And a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
177,lsp-medialive-conductor Conductor receives a message that a livestream has been created without leg id?,"Given a livestream created message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""200""
And Medialive start channel endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
And a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

"
178,lsp-medialive-conductor Conductor receives a message that starts a simulcast channel?,"Given a livestream created message with leg id
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""200""
And Medialive start channel endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
And a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes

Scenario Outline: Conductor defers start for created events
Given a livestream created message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a notification with statement ""livestreamStartDeferred"" and event ""LIVESTREAM_START_DEFERRED"" is emitted
And an ispy event 'lsp-medialive-conductor.channel.start-deferred' is emitted with the received attributes
Examples:

"
179,lsp-medialive-conductor Handle multiple channel records valid for simulcast or events?,"Given a livestream created message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200 for channel_arn
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200 for channel_arn
And Medialive schedule endpoint exists and will respond with HTTP ""200"" for arn ""arn:aws:medialive:eu-west-1:038610054328:channel:3887246""
And Medialive schedule endpoint exists and will respond with HTTP ""200"" for arn ""arn:aws:medialive:eu-west-1:038610054328:channel:3887247""
And Medialive start channel endpoint exists and will respond with HTTP ""200"" for channel_arn
And Medialive start channel endpoint exists and will respond with HTTP ""200"" for channel_arn
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
And a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes for arn 'arn:aws:medialive:eu-west-1:038610054328:channel:3887246'
And an ispy event 'lsp-medialive-conductor.channel.starting' is emitted with the received attributes for arn 'arn:aws:medialive:eu-west-1:038610054328:channel:3887247'
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel.state.updated' is emitted with the received attributes


"
180,lsp-medialive-conductor Handle any type of schedule creation 4xx response from Medialive.?,"We're expecting no retries and msg in fail q. Customer is sent notification
Given a livestream created message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""400""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.medialive.schedule-creation-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""SCHEDULE_CREATION_FAILED_IN_MEDIALIVE"" and statement ""livestreamCreatedFailed""
And an ispy event 'lsp-medialive-conductor.medialive.schedule-creation-failed.notification' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes
And the message is sent to the fail queue


"
181,lsp-medialive-conductor Handle any type of schedule creation 5xx response from Medialive?,"Given a livestream created message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""500""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.schedule-creation-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""SCHEDULE_CREATION_FAILED_IN_MEDIALIVE"" and statement ""livestreamCreatedFailed""
And an ispy event 'lsp-medialive-conductor.medialive.schedule-creation-failed.notification' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes

"
182,lsp-medialive-conductor Conductor receives a message that a livestream has been created?,"Given a livestream created message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive schedule endpoint exists and will respond with HTTP ""200""
And Medialive start channel endpoint exists and will respond with HTTP ""400""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/inputs' API gateway endpoint
And a 'PUT' request is sent to the Medialive '/prod/channels/3887246/schedule' endpoint
And an ispy event 'lsp-medialive-conductor.channel.schedule.created' is emitted with the received attributes
Then a 'POST' request is sent to the Medialive '/prod/channels/3887246/start' endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-start-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""START_CHANNEL_FAILED_IN_MEDIALIVE"" and statement ""livestreamCreatedFailed""
And an ispy event 'lsp-medialive-conductor.channel.channel-start-failed.notification' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes
And the message is sent to the fail queue

"
183,lsp-medialive-conductor Conductor sends a message to the encoding output topic when getting 4xx on getting channel?,"Given a livestream created message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""400"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""livestreamCreatedFailed""
And an ispy event 'lsp-medialive-conductor.channel-retrieve-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
184,lsp-medialive-conductor Conductor sends a message to the encoding output topic when no channel returned?,"Given a livestream created message
And MediaLive State API ""/channels"" ""GET"" endpoint returns empty HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.channel-record-notfound' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_CHANNEL_FAILED"" and statement ""livestreamCreatedFailed""
And an ispy event 'lsp-medialive-conductor.channel-record-notfound.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
185,lsp-medialive-conductor Conductor sends a message to the encoding output topic when getting 4xx on getting inputs?,"Given a livestream created message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 400
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-created.received' is emitted
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_INPUT_FAILED"" and statement ""livestreamCreatedFailed""
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed.notification' is emitted
And the message is sent to the fail queue
"
186,lsp-medialive-conductor Conductor receives a message that a livestream has been deleted?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
And the AWS EC2 api will respond to a ""release"" Elastic IP request
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/channelalerts' API gateway endpoint
And it sends a 'DELETE' to the '/channelalerts' API gateway endpoint for all received alerts
And an ispy event 'lsp-medialive-conductor.channel-alert.db-deleted' is emitted with the received attributes
And for each Input Record the following Ispys are emitted:
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And for each input record a DELETE request is sent to the State API '/inputs' endpoint
And a 'ReleaseAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.released' is emitted

"
187,lsp-medialive-conductor Conductor should handle a livestream deleted message with leg id?,"Given a livestream deleted message with leg id
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
And the AWS EC2 api will respond to a ""release"" Elastic IP request
And MediaLive State API ""/channels"" ""DELETE"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/channelalerts' API gateway endpoint
And it sends a 'DELETE' to the '/channelalerts' API gateway endpoint for all received alerts
And an ispy event 'lsp-medialive-conductor.channel-alert.db-deleted' is emitted with the received attributes
And for each Input Record the following Ispys are emitted:
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And for each input record a DELETE request is sent to the State API '/inputs' endpoint
And a 'ReleaseAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.released' is emitted
And a 'DELETE' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel.channel-state-deleted' is emitted with the received attributes

"
188,lsp-medialive-conductor receive 404 from Medialive when deleting an input and continue as it would have been success?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP 404 for all inputs
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And an ispy event 'lsp-medialive-conductor.medialive.input.already-deleted' is emitted with the received attributes

"
189,lsp-medialive-conductor receive 4XX when deleting an input?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
And Medialive delete input endpoint exists and will respond with HTTP ""400""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And an ispy event 'lsp-medialive-conductor.medialive.input-delete-failed.notification' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""DELETE_INPUT_FAILED_IN_MEDIALIVE"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes
And the message is sent to the fail queue

"
190,lsp-medialive-conductor receive 5XX when deleting an input?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP ""500""
And MediaLive State API ""/channels"" ""PUT"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And an ispy event 'lsp-medialive-conductor.medialive.input-delete-failed.notification' is emitted with the received attributes
And a 'PUT' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.channel-update' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""DELETE_INPUT_FAILED_IN_MEDIALIVE"" and statement ""livestreamDeletedFailed""

"
191,lsp-medialive-conductor Get state API endpoints fails with 404?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 404
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted
And an ispy event 'lsp-medialive-conductor.inputs-record-notfound' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_INPUT_FAILED"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.inputs-record-notfound.notification' is emitted
And the message is sent to the fail queue

"
192,lsp-medialive-conductor Get state API endpoints fails with 5xx?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 500
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_INPUT_FAILED"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.inputs-retrieve-failed.notification' is emitted

"
193,lsp-medialive-conductor delete input state api endpoint fails with 4xx?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 400
And Medialive delete input endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted
And an ispy event 'lsp-medialive-conductor.input-db-delete-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""INPUT_DELETION_FROM_DB_FAILED"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.input-db-delete-failed.notification' is emitted
And the message is sent to the fail queue

"
194,lsp-medialive-conductor delete input state api endpoint fails with 5xx?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 500
And Medialive delete input endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted
And an ispy event 'lsp-medialive-conductor.input-db-delete-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""INPUT_DELETION_FROM_DB_FAILED"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.input-db-delete-failed.notification' is emitted

"
195,lsp-medialive-conductor Delete workflow continues as normal after no alert records are found to delete?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/channelalerts' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel-alert.nothing-to-delete' is emitted
And for each Input Record the following Ispys are emitted:
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And for each input record a DELETE request is sent to the State API '/inputs' endpoint

"
196,lsp-medialive-conductor Delete workflow continues as normal after GET channel alerts returns a 4xx error?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""400"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP ""200""
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/channelalerts' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.channel-alert-retrieve-failed' is emitted
And for each Input Record the following Ispys are emitted:
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And for each input record a DELETE request is sent to the State API '/inputs' endpoint

"
197,lsp-medialive-conductor Delete workflow continues as normal after DELETE channel alerts returns a 4xx error?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""400"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/channelalerts' API gateway endpoint
And it sends a 'DELETE' to the '/channelalerts' API gateway endpoint for all received alerts
And an ispy event 'lsp-medialive-conductor.channel-alert-delete-failed' is emitted with the received attributes
And for each Input Record the following Ispys are emitted:
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And for each input record a DELETE request is sent to the State API '/inputs' endpoint

"
198,lsp-medialive-conductor Message is sent to fail queue after AWS EC2 api returns 4xx error when trying to release an elastic IP?,"Given a livestream deleted message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And the AWS EC2 api will respond to a ""release"" Elastic IP request
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/channelalerts' API gateway endpoint
And it sends a 'DELETE' to the '/channelalerts' API gateway endpoint for all received alerts
And an ispy event 'lsp-medialive-conductor.channel-alert.db-deleted' is emitted with the received attributes
And for each Input Record the following Ispys are emitted:
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And for each input record a DELETE request is sent to the State API '/inputs' endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'ReleaseAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.release-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""EIP_RELEASE_FAILED"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.eip.release-failed.notification' is emitted
And the message is sent to the fail queue

"
199,lsp-medialive-conductor AWS EC2 api returns 404 error when trying to release an elastic IP?,"Given a livestream deleted message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And the AWS EC2 api will respond to a ""release"" Elastic IP request
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/channelalerts' API gateway endpoint
And it sends a 'DELETE' to the '/channelalerts' API gateway endpoint for all received alerts
And an ispy event 'lsp-medialive-conductor.channel-alert.db-deleted' is emitted with the received attributes
And for each Input Record the following Ispys are emitted:
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And for each input record a DELETE request is sent to the State API '/inputs' endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'ReleaseAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.not-found' is emitted

"
200,lsp-medialive-conductor Message is sent to DLQ after after AWS EC2 api returns 5xx error when trying to release an elastic IP?,"Given a livestream deleted message
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And the AWS EC2 api will respond to a ""release"" Elastic IP request
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/channelalerts' API gateway endpoint
And it sends a 'DELETE' to the '/channelalerts' API gateway endpoint for all received alerts
And an ispy event 'lsp-medialive-conductor.channel-alert.db-deleted' is emitted with the received attributes
And for each Input Record the following Ispys are emitted:
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And for each input record a DELETE request is sent to the State API '/inputs' endpoint
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'ReleaseAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.release-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""EIP_RELEASE_FAILED"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.eip.release-failed.notification' is emitted

"
201,lsp-medialive-conductor Message is sent to fail queue after State Api /livestreams returns 4xx error when retrieving a livestream record?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""400"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream-retrieve-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_LIVESTREAM_FAILED"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.livestream-retrieve-failed.notification' is emitted
And the message is sent to the fail queue

"
202,lsp-medialive-conductor Message is sent to DLQ after State Api /livestreams returns 5xx error when retrieving a livestream record?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""500"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream-retrieve-failed' is emitted
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_LIVESTREAM_FAILED"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.livestream-retrieve-failed.notification' is emitted

"
203,lsp-medialive-conductor State Api /livestreams returns 404 error when retrieving a livestream record?,"Given a livestream deleted message
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.livestream-record-notfound' is emitted
And a failure notification is sent to the encoding output topic with error class ""RETRIEVE_LIVESTREAM_FAILED"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.livestream-record-notfound.notification' is emitted
And the message is sent to the fail queue

"
204,lsp-medialive-conductor Conductor should handle a livestream deleted message with leg id?,"Given a livestream deleted message with leg id
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And the AWS EC2 api will respond to a ""release"" Elastic IP request
And MediaLive State API ""/channels"" ""DELETE"" endpoint returns HTTP ""400"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/channelalerts' API gateway endpoint
And it sends a 'DELETE' to the '/channelalerts' API gateway endpoint for all received alerts
And an ispy event 'lsp-medialive-conductor.channel-alert.db-deleted' is emitted with the received attributes
And for each Input Record the following Ispys are emitted:
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And for each input record a DELETE request is sent to the State API '/inputs' endpoint
And a 'ReleaseAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.released' is emitted
And a 'DELETE' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.channel-db-delete-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DELETION_FROM_DB_FAILED"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-db-delete-failed.notification' is emitted with the received attributes
And the message is sent to the fail queue

"
205,lsp-medialive-conductor Conductor should handle a livestream deleted message with leg id?,"Given a livestream deleted message with leg id
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channels"" ""GET"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/channelalerts"" ""GET"" endpoint returns HTTP ""200"" with
And Medialive State API gateway /inputs get endpoint exists and will respond with HTTP 200
And Medialive State API gateway /inputs delete endpoint exists and will respond with HTTP 200
And Medialive delete input endpoint exists and will respond with HTTP ""200""
And MediaLive State API ""/channelalerts"" ""DELETE"" endpoint returns HTTP ""200"" with
And MediaLive State API ""/livestreams"" ""GET"" endpoint returns HTTP ""200"" with
And the AWS EC2 api will respond to a ""release"" Elastic IP request
And MediaLive State API ""/channels"" ""DELETE"" endpoint returns HTTP ""500"" with
When the message arrives from the input queue
Then an ispy event 'lsp-medialive-conductor.livestream-deleted.received' is emitted with the received attributes
And a 'GET' to the '/livestreams' API gateway endpoint
And a 'GET' to the '/channels' API gateway endpoint
And a 'GET' to the '/channelalerts' API gateway endpoint
And it sends a 'DELETE' to the '/channelalerts' API gateway endpoint for all received alerts
And an ispy event 'lsp-medialive-conductor.channel-alert.db-deleted' is emitted with the received attributes
And for each Input Record the following Ispys are emitted:
And a 'DELETE' request is sent to the Medialive '/prod/inputs/inputId' endpoint
And for each input record a DELETE request is sent to the State API '/inputs' endpoint
And a 'ReleaseAddress' request is sent to AWS EC2 api
And an ispy event 'lsp-medialive-conductor.eip.released' is emitted
And a 'DELETE' to the '/channels' API gateway endpoint
And an ispy event 'lsp-medialive-conductor.medialive.channel-db-delete-failed' is emitted with the received attributes
And a failure notification is sent to the encoding output topic with error class ""CHANNEL_DELETION_FROM_DB_FAILED"" and statement ""livestreamDeletedFailed""
And an ispy event 'lsp-medialive-conductor.medialive.channel-db-delete-failed.notification' is emitted with the received attributes
"
206,lsp-medialive-logscraper One input switch message for a slate?,"Given a data message with an input switch message for a slate
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And state API ""/inputs"" ""GET"" endpoint returns HTTP ""200"" with
And state API ""/slates"" ""GET"" endpoint returns HTTP ""200"" with
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
And an ispy event 'info.input-switch.received' is emitted
And an ispy event 'medialive.input-id.retrieved' is emitted
And a GET request is sent to the State API /inputs endpoint
And an ispy event 'channel-input.retrieved' is emitted with
And a GET request is sent to the State API /slates endpoint
And an ispy event 'slate.retrieved' is emitted with
And an ispy event 'input-switch.notification.complete' is emitted with
# input-switch
# ChannelStateRecord
And a ""inputSwitchLog"" event message is sent to the Medialive Events Topic
And an ispy event 'info.input-switch.processed' is emitted with
# input-switch
# ChannelStateRecord

"
207,lsp-medialive-logscraper One input switch message for an input?,"Given a data message with an input switch message for an input
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And state API ""/inputs"" ""GET"" endpoint returns HTTP ""200"" with
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
And an ispy event 'info.input-switch.received' is emitted
And an ispy event 'medialive.input-id.retrieved' is emitted
And an ispy event 'channel-input.retrieved' is emitted with
And an ispy event 'input-switch.notification.complete' is emitted with
# input-switch
# ChannelStateRecord
And a ""inputSwitchLog"" event message is sent to the Medialive Events Topic
And an ispy event 'info.input-switch.processed' is emitted with
# input-switch
# ChannelStateRecord

"
208,lsp-medialive-logscraper One input switch message for an input in Marvin streams?,"Given a data message with an input switch message for an input in Marvin streams
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And state API ""/inputs"" ""GET"" endpoint returns HTTP ""200"" with
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
And an ispy event 'info.input-switch.received' is emitted
And an ispy event 'medialive.input-id.retrieved' is emitted
And an ispy event 'info.input-switch.channel.retrieved' is emitted
And a GET request is sent to the State API /inputs endpoint
And an ispy event 'channel-input.retrieved' is emitted with
And an ispy event 'input-switch.notification.complete' is emitted with
# input-switch
# ChannelStateRecord
And a ""inputSwitchLog"" event message is sent to the Medialive Events Topic
And an ispy event 'info.input-switch.processed' is emitted with
# input-switch
# ChannelStateRecord

"
209,lsp-medialive-logscraper exception thrown upon No matching InputRecord found?,"Given a data message with an input switch message for a slate
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And state API ""/inputs"" ""GET"" endpoint returns HTTP ""200"" with
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
And an ispy event 'info.input-switch.received' is emitted
And an ispy event 'no-matching-input-record.exception' is emitted
And a failure notification is sent to the encoding output topic with
And an error message is sent to the fail queue

"
210,lsp-medialive-logscraper Ignore when output is not pv10?,"Given a data message with an input switch message with output pv9
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
Then an ispy event 'info.log-event.discarded' is emitted with

"
211,lsp-medialive-logscraper Ignore when log stream name not prepended with as_run?,"Given a data message with an input switch message for a slate
And the log stream name is not prepended with as_run
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
Then an ispy event 'info.log-event.discarded' is emitted with

"
212,lsp-medialive-logscraper exception thrown upon medialive api exception?,"Given a data message with an input switch message for a slate
And Medialive describe channel endpoint exists and will respond with HTTP ""500""
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
And an ispy event 'info.input-switch.received' is emitted
And an ispy event 'info.input-switch.channel.retrieved' is emitted
And an ispy event 'medialive.input-id.retrieve.fail' is emitted
And a failure notification is sent to the encoding output topic with
And an error message is sent to the fail queue
"
213,lsp-medialive-logscraper state api GET inputs returns an empty response?,"Given a data message with an input switch message for a slate
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And state API ""/inputs"" ""GET"" endpoint returns HTTP ""200""
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
And an ispy event 'no-matching-input-record' is emitted with
And a failure notification is sent to the encoding output topic with
And an ispy event 'no-matching-input-record.exception' is emitted
And an error message is sent to the fail queue

Scenario Outline: state api GET slates returns xxx
Given a data message with an input switch message for a slate
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And state API ""/inputs"" ""GET"" endpoint returns HTTP ""200"" with
And state API ""/slates"" ""GET"" endpoint returns HTTP ""<status-code>""
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
And an ispy event 'slates-retrieve-failed' is emitted with
And a failure notification is sent to the encoding output topic with
And an ispy event 'slates-retrieve-failed.notification' is emitted
And an error message is sent to the fail queue
Examples:

"
214,lsp-medialive-logscraper state api GET slates returns an empty response?,"Given a data message with an input switch message for a slate
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And state API ""/inputs"" ""GET"" endpoint returns HTTP ""200"" with
And state API ""/slates"" ""GET"" endpoint returns HTTP ""200""
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
And an ispy event 'slates-record-notfound' is emitted with
And a failure notification is sent to the encoding output topic with
And an ispy event 'slates-record-notfound.notification' is emitted
And an error message is sent to the fail queue
"
215,lsp-medialive-logscraper One final timecode message for a slate?,"Given a data message with a final timecode message for a slate with 'pv10' as output name from '0' pipeline
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
And an ispy event 'final-timecode.received' is emitted with
And an ispy event 'final-timecode.notification.complete' is emitted with
And a ""finalTimecode"" event message is sent to the Medialive Events Topic

"
216,lsp-medialive-logscraper One final timecode message from duplicate pipeline?,"Given a data message with a final timecode message for a slate with 'pv10' as output name from '1' pipeline
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
Then no event message is sent to the Medialive Events Topic

"
217,lsp-medialive-logscraper Ignore when output is not pv10?,"Given a data message with a final timecode message for a slate with 'pv9' as output name from '0' pipeline
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
Then an ispy event 'info.log-event.discarded' is emitted with

"
218,lsp-medialive-logscraper Ignore when log stream name not prepended with as_run?,"Given a data message with a final timecode message for a slate with 'pv10' as output name from '0' pipeline
And the log stream name is not prepended with as_run
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
Then an ispy event 'info.log-event.discarded' is emitted with
"
219,lsp-medialive-logscraper One input switch message and one invalid log event?,"Given a data message with an input switch message for a slate
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
And state API ""/inputs"" ""GET"" endpoint returns HTTP ""200"" with
And state API ""/slates"" ""GET"" endpoint returns HTTP ""200"" with
And an invalid log event
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
Then an ispy event 'info.input-switch.received' is emitted
Then an ispy event 'info.input-switch.processed' is emitted
Then an ispy event ""badmessage"" is emitted
And the data message with only the bad log event is sent to the badmessage queue

"
220,lsp-medialive-logscraper One invalid data message?,"Given an invalid data message
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event ""badmessage"" is emitted
And the original data message is sent to the badmessage queue

"
221,lsp-medialive-logscraper One invalid log event?,"Given a data message with an an invalid log event
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event ""badmessage"" is emitted
And the original data message is sent to the badmessage queue
"
222,lsp-medialive-logscraper One initial timecode message for a slate?,"Given a data message with a initial timecode message for a slate with 'pv10' as output name from '0' pipeline
And Medialive describe channel endpoint exists and will respond with HTTP ""200""
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
And an ispy event 'initial-timecode.received' is emitted with
And an ispy event 'initial-timecode.notification.complete' is emitted with
And a ""initialTimecode"" event message is sent to the Medialive Events Topic

"
223,lsp-medialive-logscraper One final timecode message from duplicate pipeline?,"Given a data message with a initial timecode message for a slate with 'pv10' as output name from '1' pipeline
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
Then no event message is sent to the Medialive Events Topic

"
224,lsp-medialive-logscraper Ignore when output is not pv10?,"Given a data message with a initial timecode message for a slate with 'pv9' as output name from '0' pipeline
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
Then an ispy event 'info.log-event.discarded' is emitted with

"
225,lsp-medialive-logscraper Ignore when log stream name not prepended with as_run?,"Given a data message with a initial timecode message for a slate with 'pv10' as output name from '0' pipeline
And the log stream name is not prepended with as_run
When the CloudwatchLogEvent is sent to logscraper
Then an ispy event 'info.message.received' is emitted
Then an ispy event 'info.log-event.discarded' is emitted with
"
226,"What is lsp-medialive-logscraper
?","
"
227,"lsp-medialive-logscraper's ""Inputs
""","
CloudwatchLogsEvent message with Input Switch Event Logs from ElementalMediaLive

CloudwatchLogsEvent:

```
{ ""awslogs"": {""data"": ""BASE64ENCODED_GZIP_COMPRESSED_DATA""}
```

Data:
```
{
""owner"": ""123456789012"",
""logGroup"": ""ElementalMediaLive"",
""logStream"": ""123456789012_ElementalMediaLive_us-east-1"",
""subscriptionFilters"": [
""Destination""
],
""messageType"": ""DATA_MESSAGE"",
""logEvents"": [
{
""id"": ""31953106606966983378809025079804211143289615424298221568"",
""timestamp"": 1432826855000,
""message"": ""{\""eventV ... oot\""}"" # Nested Input Switch Event Log as escaped json
}
]
}
```

Input Switch Event Log:

```
{
""timestamp"": ""2020-07-06T08:15:36.232187"",
""as_run_type"": ""input_switch"",
""timecode"": ""08:15:15:26"",
""input_id"": ""Slate"",
""date"": ""2020-7-6 (tz=0)"",
""url_path"": ""s3://modav-lab-samples/slates/generic/generic-comingup.mp4 - <optional for slates - only if available in slates>"",
""output_name"": ""pv10""
}
```

"
228,"lsp-medialive-logscraper's ""Outputs
""","
There are three outputs:
- An InputSwitchLog event message sent (SQS) to `MedialiveEventTopic-L15ZFUR8ZH72`
- A failure notification message sent (SQS) to `EncodingOutputTopic-2QEWR81ELBLR`
- HTTP requests to State Api `/inputs` and `/slates` endpoints.

"
229,"lsp-medialive-logscraper's ""Development
""","
The Makefile defines all the processes needed to build and test the project.

"
230,"lsp-medialive-logscraper's ""Create a clean build of the Java application
""","```
make jar
```

"
231,"lsp-medialive-logscraper's ""Run the tests
""","```
make test
```

"
232,"lsp-medialive-logscraper's ""Combination of the above two commands - building first and testing next
""","```
make clean_test 
```

"
233,"lsp-medialive-logscraper's ""Cucumber tags can be provided in the environment variable TAGS to run specific scenarios:
""","```
TAGS=""@happy"" make test or TAGS=""@happy"" ./test
```
NOTE: By default, the tests run using the same arguments as Okta. This means the order is random and any scenarios tagged with `@wip` are skipped.

"
234,"lsp-medialive-logscraper's ""Deploying
""","
Use Jenkins to build and deploy to INT, promote to TEST and LIVE via cosmos console.

INT is not subscribed to ElementalMediaLive events because only one subscription is allowed per log-group. 

"
235,"lsp-medialive-logscraper's ""Diagnostics
""","
Splunk events start with `""lsp-medialive-logscraper""`

Logs are on the `""Monitoring""` tab of the lambda page or in `""Cloud Watch - Log Groups""` (filter `""/aws/lambda/IntModavLspMedialiveLogscraper""`)

"
236,"lsp-medialive-logscraper's ""Testing / Invoking
""","
The lambda is subscribed to cloudwatch logs directly.
Writing a message directly to the correct cloudwatch log group and log stream should invoke the lambda.

Note: Log stream names without `as_run` as a suffix are filtered out in the lambda   

```
wormhole modav-development aws logs put-log-events --log-group-name ElementalMediaLive --log-stream-name my_log_stream_name_as_run --log-events '[
{
""timestamp"":1596710979607 , 
""message"": ""{
\""timestamp\"": \""2020-07-06T08:15:36.232187\"",
\""as_run_type\"": \""input_switch\"",
\""timecode\"": \""08:15:15:26\"",
\""input_id\"": \""Slate\"",
\""date\"": \""2020-7-6 (tz=0)\"",
\""url_path\"": \""s3://bucket/key\"",
\""output_name\"": \""pv10\""}""
}]'
```

1. Create a log-stream in the console called ""my_log_stream_name_as_run"" as it may have been removed
2. Get the epoch now in milliseconds and populate ""timestamp"" with it https://currentmillis.com/
3. Collapse the command into remove line end errors 
```
wormhole modav-development aws logs put-log-events --log-group-name ElementalMediaLive --log-stream-name my_log_stream_name_as_run --log-events '[{""timestamp"":1596710979607 , ""message"": ""{\""timestamp\"": \""2020-07-06T08:15:36.232187\"",\""as_run_type\"": \""input_switch\"",\""timecode\"": \""08:15:15:26\"",\""input_id\"": \""Slate\"",\""date\"": \""2020-7-6 (tz=0)\"",\""url_path\"": \""s3://bucket/key\"",\""output_name\"": \""pv10\""}""}]'`
```
4. Run command and expect an error to say ""The given sequenceToken is invalid."" 
5. Run the command again but with the --sequence-token given from the above error.
6. This should have triggered logscraper but it will fail to understand the message

"
237,"lsp-medialive-logscraper's ""Replaying failed messages
""","
There is no input queue but AWS still handles erros in a DLQ format so failed messages will be put on the usual DLQ. 
There is no way to replay the messages as of yet as Gon does not support directly playing back to a Lambda.

TODO: Create a script and documentation for how to replay failures

"
238,"lsp-medialive-logscraper's ""Bad messages
""","
A CloudwatchLogsEvent is a message with a list of nested messages that AWS says may change at any time. 
Because of this bad messages are handled in two ways. 

**Outer non-nested bad message:**

If the outer non-nested message can not be parsed the whole message is placed on the bad message queue.

**Inner nested bad message:**

For each nested message that can not be parsed, a bad message is placed on the bad message queue for each.

For example if this message was received...
```
{
""owner"": ""123456789012"",
""logGroup"": ""ElementalMediaLive"",
""logStream"": ""123456789012_ElementalMediaLive_us-east-1"",
""subscriptionFilters"": [
""Destination""
],
""messageType"": ""DATA_MESSAGE"",
""logEvents"": [
{
""id"": ""31953106606966983378809025079804211143289615424298221568"",
""timestamp"": 1432826855000,
""message"": ""{\""bad\"": ""\message1\""}""
},
{
""id"": ""31953106606966983378809025079804211143289615424298221568"",
""timestamp"": 1432826855000,
""message"": ""{\""good\"": ""\message\""}""
},
{
""id"": ""31953106606966983378809025079804211143289615424298221568"",
""timestamp"": 1432826855000,
""message"": ""{\""bad\"": ""\message2\""}""
}
]
}
```
... and logscraper could not parse the first and third nested message. then the following two messages would be placed
on the bad message queue. 

```
{
""owner"": ""123456789012"",
""logGroup"": ""ElementalMediaLive"",
""logStream"": ""123456789012_ElementalMediaLive_us-east-1"",
""subscriptionFilters"": [
""Destination""
],
""messageType"": ""DATA_MESSAGE"",
""logEvents"": [
{
""id"": ""31953106606966983378809025079804211143289615424298221568"",
""timestamp"": 1432826855000,
""message"": ""{\""bad\"": ""\message1\""}""
}
]
}
```

and

```
{
""owner"": ""123456789012"",
""logGroup"": ""ElementalMediaLive"",
""logStream"": ""123456789012_ElementalMediaLive_us-east-1"",
""subscriptionFilters"": [
""Destination""
],
""messageType"": ""DATA_MESSAGE"",
""logEvents"": [
{
""id"": ""31953106606966983378809025079804211143289615424298221568"",
""timestamp"": 1432826855000,
""message"": ""{\""bad\"": ""\message2\""}""
}
]
}
``` 

"
239,"lsp-medialive-logscraper's ""Freeman
""","
Because of the need to handle bad CloudwatchLogEvents messages, the code has a bespoke BadMessageHandler
and FreemanLogEvents domain object to hold the data needed to rebuild the bad messages.

DLQ events will retry all the messages

TODO: Fail queue events can handle the failures like the BadMessageHandler 
"
240,"What is gti-mediaconvert-notifier
?","
Consumes AWS Mediaconvert job status messages produced as Cloudwatch Events.
Converts status events to Transcode status messages and cleans up the in progress table on completion or failed job events. 

"
241,"gti-mediaconvert-notifiler's ""Make a clean build of the java application
""","```
make jar
```

"
242,"gti-mediaconvert-notifiler's ""Run the tests
""","```
make test
```

"
243,"gti-mediaconvert-notifiler's ""Combination of the above two commands - building first and testing next
""","```
make clean_test
```"
244,"gti-mediaconvert-notifier Notifier gets a ""COMPLETE"" status notification from events queue?","Given a ""mediaconvert_cloudwatch_event-COMPLETED.json"" cloudwatch event
And a Transcode Job for profile ""fake-profile"" exists in the In-Progress table
Then the cloudwatch event is sent to the input queue
And an iSpy is emitted with name ""gti-mediaconvert-notifier.info.transcode.status"" with
And an iSpy is emitted with name ""gti-mediaconvert-notifier.info.transcode.complete"" with the TranscodeJob
And the Transcode Job is put on the Pleasant queue
And the Transcode Job is removed from the In-Progress table
And an iSpy is emitted with name ""gti-mediaconvert-notifier.info.in-progress-db-record.deleted"" with
And an iSpy is emitted with name ""gti-mediaconvert-notifier.info.message.finished"" with

"
245,"gti-mediaconvert-notifier Notifier gets a ""COMPLETE"" status notification from events queue for piff bundle profile?","Given a ""mediaconvert_piff_bundle_cloudwatch_event-COMPLETED.json"" cloudwatch event
And a Transcode Job for profile ""piff_bundle"" exists in the In-Progress table
Then the cloudwatch event is sent to the input queue
And an iSpy is emitted with name ""gti-mediaconvert-notifier.info.transcode.status"" with
And an iSpy is emitted with name ""gti-mediaconvert-notifier.info.transcode.complete"" with the TranscodeJob
And 3 Transcode status messages are put on the Pleasant queue for following profiles
And the Transcode Job is removed from the In-Progress table
And an iSpy is emitted with name ""gti-mediaconvert-notifier.info.in-progress-db-record.deleted"" with
And an iSpy is emitted with name ""gti-mediaconvert-notifier.info.message.finished"" with

"
246,"gti-mediaconvert-notifier Notifier gets a ""ERROR"" status notification from events queue?","Given a ""mediaconvert_cloudwatch_event-ERROR.json"" cloudwatch event
And a Transcode Job for profile ""fake-profile"" exists in the In-Progress table
Then the cloudwatch event is sent to the input queue
And an iSpy is emitted with name ""gti-mediaconvert-notifier.info.transcode.status"" with
And an iSpy is emitted with name ""gti-mediaconvert-notifier.error.transcode.failmessage"" with the TranscodeJob
And the Transcode Job is put on the FailedTranscodeMessages queue
And the Transcode Job is removed from the In-Progress table
And an iSpy is emitted with name ""gti-mediaconvert-notifier.info.in-progress-db-record.deleted"" with
And an iSpy is emitted with name ""gti-mediaconvert-notifier.info.message.finished"" with

"
247,gti-mediaconvert-notifier Bad message ends up in the bad message queue?,"When a bad SQS message is sent to the queue
Then an iSpy is emitted with name ""gti-mediaconvert-notifier.error.badmessage""
Then a message appears in the Bad Message Queue
"
248,gti-mediaconvert-trigger Trigger creates a job with all optional settings?,"Given mediaconvert
When a Transcode Job is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""info.transcode.request.sent"" with job info
And the Transcode Job is persisted to the database
And an iSpy is emitted with name ""info.transcode.request.persisted"" with job info
And a mediaconvert job has been created

"
249,gti-mediaconvert-trigger Trigger creates job with multi source transcode requests with all optional settings?,"Given mediaconvert
When a Multi Source Transcode Job is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""info.transcode.request.sent"" with job info
And the Transcode Job is persisted to the database
And an iSpy is emitted with name ""info.transcode.request.persisted"" with job info
And a mediaconvert job has been created for bumper transcode

"
250,gti-mediaconvert-trigger Trigger creates low priority job with all optional setting?,"Given mediaconvert
When a low priority Transcode Job is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""info.transcode.request.sent"" with job info
And the Transcode Job is persisted to the database
And an iSpy is emitted with name ""info.transcode.request.persisted"" with job info
And a mediaconvert job has been created with low priority

"
251,gti-mediaconvert-trigger Trigger sends a timestamp message when requiredBy within 24 hours?,"Given mediaconvert
When a Transcode Job is sent to Trigger with requiredBy within 24 hours
Then Trigger is invoked
And trigger sends a ""slo-timestamp-message-within-24hrs.json"" to the step function
And Trigger should iSpy ""gti-mediaconvert-trigger.slo-timestamp-message.sent"" with the following attributes:

"
252,gti-mediaconvert-trigger Trigger sends a timestamp message when requiredBy after 24 hours?,"Given mediaconvert
When a Transcode Job is sent to Trigger with requiredBy after 24 hours
Then Trigger is invoked
And trigger sends a ""slo-timestamp-message-24hrs-in-future.json"" to the step function
And Trigger should iSpy ""gti-mediaconvert-trigger.slo-timestamp-message.sent"" with the following attributes:

"
253,gti-mediaconvert-trigger Trigger ispies and doesnt send to the step function topic if missing required by and media duration?,"Given mediaconvert
When a transcode job missing required by and media duration
Then Trigger is invoked
And an iSpy is emitted with name ""missing-slo-timestamp-information""

"
254,gti-mediaconvert-trigger Template does not exist?,"Given mediaconvert has no templates
When a Transcode Job is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""error.transcode.missing-job-template"" and exception
And a message appears in the Fail Queue

"
255,gti-mediaconvert-trigger Create job fails?,"Given mediaconvert is broken
When a Transcode Job is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""error.transcode.create-job-failed"" and exception

"
256,gti-mediaconvert-trigger Bad message ends up in the bad message queue?,"When a bad SQS message is sent to the queue
Then an iSpy is emitted with name ""error.badmessage""
Then a message appears in the Bad Message Queue
"
257,gti-mediaconvert-trigger Job defaults to stereo?,"Given mediaconvert
When a simple Transcode Job is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""info.transcode.request.sent"" with job info
And a mediaconvert job has been created for stereo

"
258,gti-mediaconvert-trigger Job is stereo?,"Given mediaconvert
When a simple stereo Transcode Job is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""info.transcode.request.sent"" with job info
And a mediaconvert job has been created for stereo

"
259,"gti-mediaconvert-trigger Job is mono with trim, crop, colourspace and static dog?","Given mediaconvert
When a complex Transcode Job is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""info.transcode.dog.added"" with
And an iSpy is emitted with name ""info.transcode.request.sent"" with job info
And a mediaconvert job has been created for mono with trim, crop, colourspace and static dog

"
260,gti-mediaconvert-trigger Job with dynamic dog?,"Given mediaconvert
When a simple Transcode Job with dynamic dog is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""info.transcode.dog.added"" with
And an iSpy is emitted with name ""info.transcode.request.sent"" with job info
And a mediaconvert job has been created for stereo with dynamic dog

Scenario Outline: Audio describe Job
Given mediaconvert
When a audio describe <workflow> Transcode Job is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""info.transcode.request.sent"" with job info
And a mediaconvert job has been created for audio describe <workflow>
Examples:

"
261,gti-mediaconvert-trigger 4x3 source resolution job?,"Given mediaconvert
When a Transcode Job is sent to Trigger with 4x3 source resolution
Then Trigger is invoked
And an iSpy is emitted with name ""info.transcode.request.sent"" with job info
And a mediaconvert job has been created with default scaling behaviour

"
262,gti-mediaconvert-trigger Fails to add dynamic dog to job?,"Given mediaconvert
When a simple Transcode Job with bad dynamic dog is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""error.transcode.dog.failed"" with
And an iSpy is emitted with name ""info.transcode.request.sent"" with job info
And a mediaconvert job has been created for stereo

"
263,gti-mediaconvert-trigger Fails to add static dog to job?,"Given mediaconvert
When a simple Transcode Job with bad static dog is sent to Trigger
Then Trigger is invoked
And an iSpy is emitted with name ""error.transcode.dog.failed"" with
And an iSpy is emitted with name ""info.transcode.request.sent"" with job info
And a mediaconvert job has been created for stereo
"
264,"What is gti-mediaconvert-trigger
?","
Converts requests to MediaConvert jobs, queuing them for processing and handles job status updates.

See also: [gti-bitmovin](https://github.com/bbc/gti-bitmovin)

"
265,"gti-mediaconvert-trigger's ""Component Tests
""","
Creates a Dynamo table in modav-tmp for the Java component at runtime to persist an `InProgress` object, and later retrieve it
in `gti_mediaconvert_trigger.rb` to verify it's been persisted successfully.

*Option 1: Run feature file* 
```
wormhole modav-tmp ./test ./features/<feature-file>.feature
```

*Option 2: Run feature file by scenario*
```
wormhole modav-tmp ./test ./features/<feature-file>.feature:<line-no>
```

*Option 3: Run all scenarios*
```
wormhole modav-tmp ./test 
```

"
266,"gti-mediaconvert-trigger's ""Testing
""","
`gti_in_transcode_job.xml` in the testing directory is the fixture needed.

Go to `modav-development`, copy and paste in the fixture, and send this message in mediaconvert-trigger's input queue.

```
IntModavGtiMediaconvertTriggerResources-Queue-EZM0WZUID0HZ
```

Then check Splunk on INT for emitted ispies under `gti-mediaconvert-trigger.*`

A record should appear in the `GtiMediaConvertInProgressDynamoDBTable`.

"
267,"gti-mediaconvert-trigger's ""Stacks
""","
In a `clean-modav-spud` session

```
modav-spud prepare env
```
Then
```
modav-spud apply env
```"
268,White-pages's purpose,"White Pages is a component in the 2017 File Based Delivery (FBD) workflow. It receives RightChanged messages from the On Demand Manager and attempts to find a corresponding subtitles file in subherd's bucket - mapping between VPID and UID to do so if required. If one is found, White Pages will send a message to Subherd so that the relevant conversion can take place. Note: Not all suppliers of FBD assets are yet using the 2017 FBD workflow"
269,White-pages's inputs and outputs,LiveModavWhitePagesResources-Queue-TBC (in modav-production account)
270,White-pages's architecture,"A Java Spring Boot app, built and deployed and configured by Cosmos."
271,White-pages's deployment,This app is deployed to the Amazon cloud via Cosmos.White Pages is deployed to the modav-production AWS account
272,White-pages's configuration and licensing,"Configuration via:Example of file-based-delivery-subtitle-extensions.json:white-pages parses language and purpose from subtitle filename if available or infer from this config file. For each language and purpose, white-pages picks the best one based on extension priorities from this config file.No special licensing considerations."
273,White-pages's database,None.
274,White-pages's dependencies,None provided.The Video Factory FBD workflow:
275,"White-pages's changes, maintenance and outages","Impact of outage:Once the component is back up again, the delayed work will be processed - i.e. no work will be lost (as long as the component was down for less than 4 days). However the downstream workflow may be busy for a while.Stopping and starting the component may cause messages to be processed twice, but this is considered harmless."
276,White-pages's backup and recovery,"Not required. The application is deployed via Cosmos, and is stateless."
277,White-pages ispy event 'white-pages.complete',Process was completed
278,White-pages ispy event 'white-pages.badmessage',Bad message
279,White-pages ispy event 'white-pages.reading',Syncopaticaption recieved a message
280,White-pages ispy event 'white-pages.added.activity.id',"White pages has set the activity id of the messageODM does not currently send an activity id.  If whitepages receives a message with no activity id it will add one.  If it receives a message with an activity id, it uses it."
281,White-pages ispy event 'white-pages.exception',An exception occurs
282,White-pages ispy event 'white-pages.found.matching.file',White pages found a file matching the VPID in the message in subherds bucket
283,White-pages ispy event 'white-pages.no.matching.file',"White pages could not find a matching file, the message shall be discarded"
284,White-pages ispy event 'white-pages.fetch.version.error.client',A 4xx error was received when contacting PIPS
285,White-pages ispy event 'white-pages.fetch.version.error.server',A 5xx error was received when contacting PIPS
286,White-pages ispy event 'white-pages.fetch.version.error.malformed',The URL requesterd from PIPS is invalid
